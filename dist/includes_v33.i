; >>> BEGIN exec/types.i

 IFND EXEC_TYPES_I
EXEC_TYPES_I SET 1
EXTERN_LIB  MACRO
 XREF    _LVO\1
 ENDM
STRUCTURE   MACRO
\1          EQU     0
SOFFSET     SET     \2
 ENDM
BOOL        MACRO
\1          EQU     SOFFSET
SOFFSET     SET     SOFFSET+2
 ENDM
BYTE        MACRO
\1          EQU     SOFFSET
SOFFSET     SET     SOFFSET+1
 ENDM
UBYTE       MACRO
\1          EQU     SOFFSET
SOFFSET     SET     SOFFSET+1
 ENDM
WORD        MACRO
\1          EQU     SOFFSET
SOFFSET     SET     SOFFSET+2
 ENDM
UWORD       MACRO
\1          EQU     SOFFSET
SOFFSET     SET     SOFFSET+2
 ENDM
SHORT        MACRO
\1          EQU     SOFFSET
SOFFSET     SET     SOFFSET+2
 ENDM
USHORT      MACRO
\1          EQU     SOFFSET
SOFFSET     SET     SOFFSET+2
 ENDM
LONG        MACRO
\1          EQU     SOFFSET
SOFFSET     SET     SOFFSET+4
 ENDM
ULONG       MACRO
\1          EQU     SOFFSET
SOFFSET     SET     SOFFSET+4
 ENDM
FLOAT       MACRO
\1          EQU     SOFFSET
SOFFSET     SET     SOFFSET+4
 ENDM
APTR        MACRO
\1          EQU     SOFFSET
SOFFSET     SET     SOFFSET+4
 ENDM
CPTR        MACRO
\1          EQU     SOFFSET
SOFFSET     SET     SOFFSET+4
 ENDM
RPTR        MACRO
\1          EQU     SOFFSET
SOFFSET     SET     SOFFSET+2
 ENDM
STRUCT      MACRO
\1          EQU     SOFFSET
SOFFSET     SET     SOFFSET+\2
 ENDM
LABEL       MACRO
\1          EQU     SOFFSET
 ENDM
BITDEF      MACRO
 BITDEF0 \1,\2,B_,\3
\@BITDEF    SET     1<<\3
 BITDEF0 \1,\2,F_,\@BITDEF
 ENDM
BITDEF0     MACRO
\1\3\2      EQU     \4
 ENDM
LIBRARY_VERSION EQU     33
 ENDC EXEC_TYPES_I

; >>> BEGIN exec/nodes.i

 IFND EXEC_NODES_I
EXEC_NODES_I SET 1
 IFND EXEC_TYPES_I
 ENDC !EXEC_TYPES_I
 STRUCTURE  LN,0
 APTR    LN_SUCC
 APTR    LN_PRED
 UBYTE   LN_TYPE
 BYTE    LN_PRI
 APTR    LN_NAME
 LABEL   LN_SIZE
 STRUCTURE  MLN,0
 APTR    MLN_SUCC
 APTR    MLN_PRED
 LABEL   MLN_SIZE
NT_UNKNOWN      EQU     0
NT_TASK         EQU     1
NT_INTERRUPT    EQU     2
NT_DEVICE       EQU     3
NT_MSGPORT      EQU     4
NT_MESSAGE      EQU     5
NT_FREEMSG      EQU     6
NT_REPLYMSG     EQU     7
NT_RESOURCE     EQU     8
NT_LIBRARY      EQU     9
NT_MEMORY       EQU     10
NT_SOFTINT      EQU     11
NT_FONT         EQU     12
NT_PROCESS      EQU     13
NT_SEMAPHORE    EQU     14
NT_SIGNALSEM    EQU     15
 ENDC !EXEC_NODES_I

; >>> BEGIN exec/lists.i

 IFND EXEC_LISTS_I
EXEC_LISTS_I SET 1
 IFND EXEC_NODES_I
 ENDC !EXEC_NODES_I
 STRUCTURE  LH,0
 APTR    LH_HEAD
 APTR    LH_TAIL
 APTR    LH_TAILPRED
 UBYTE   LH_TYPE
 UBYTE   LH_pad
 LABEL   LH_SIZE
 STRUCTURE  MLH,0
 APTR    MLH_HEAD
 APTR    MLH_TAIL
 APTR    MLH_TAILPRED
 LABEL   MLH_SIZE
NEWLIST     MACRO
 MOVE.L  \1,(\1)
 ADDQ.L  #LH_TAIL,(\1)
 CLR.L   LH_TAIL(\1)
 MOVE.L  \1,(LH_TAIL+LN_PRED)(\1)
 ENDM
TSTLIST     MACRO
 IFC     '\1',''
 CMP.L   LH_TAIL+LN_PRED(A0),A0
 ENDC
 IFNC    '\1',''
 CMP.L   LH_TAIL+LN_PRED(\1),\1
 ENDC
 ENDM
SUCC        MACRO
 MOVE.L  (\1),\2
 ENDM
PRED        MACRO
 MOVE.L  LN_PRED(\1),\2
 ENDM
IFEMPTY     MACRO
 CMP.L   LH_TAIL+LN_PRED(\1),\1
 BEQ     \2
 ENDM
IFNOTEMPTY  MACRO
 CMP.L   LH_TAIL+LN_PRED(\1),\1
 BNE     \2
 ENDM
TSTNODE     MACRO
 MOVE.L  (\1),\2
 TST.L   (\2)
 ENDM
NEXTNODE    MACRO
 MOVE.L  \1,\2
 MOVE.L  (\2),\1
 IFC     '\0',''
 BEQ     \3
 ENDC
 IFNC    '\0',''
 BEQ.S   \3
 ENDC
 ENDM
ADDHEAD     MACRO
 MOVE.L  (A0),D0
 MOVE.L  A1,(A0)
 MOVEM.L D0/A0,(A1)
 MOVE.L  D0,A0
 MOVE.L  A1,LN_PRED(A0)
 ENDM
ADDTAIL     MACRO
 LEA     LH_TAIL(A0),A0
 MOVE.L  LN_PRED(A0),D0
 MOVE.L  A1,LN_PRED(A0)
 MOVE.L  A0,(A1)
 MOVE.L  D0,LN_PRED(A1)
 MOVE.L  D0,A0
 MOVE.L  A1,(A0)
 ENDM
REMOVE      MACRO
 MOVE.L  (A1),A0
 MOVE.L  LN_PRED(A1),A1
 MOVE.L  A0,(A1)
 MOVE.L  A1,LN_PRED(A0)
 ENDM
REMHEAD     MACRO
 MOVE.L  (A0),A1
 MOVE.L  (A1),D0
 BEQ.S   REMHEAD\@
 MOVE.L  D0,(A0)
 EXG.L   D0,A1
 MOVE.L  A0,LN_PRED(A1)
REMHEAD\@
 ENDM
REMHEADQ    MACRO
 MOVE.L  (\1),\2
 MOVE.L  (\2),\3
 MOVE.L  \3,(\1)
 MOVE.L  \1,LN_PRED(\3)
 ENDM
REMTAIL     MACRO
 MOVE.L  LH_TAIL+LN_PRED(A0),A1
 MOVE.L  LN_PRED(A1),D0
 BEQ.S   REMTAIL\@
 MOVE.L  D0,LH_TAIL+LN_PRED(A0)
 EXG.L   D0,A1
 MOVE.L  A0,(A1)
 ADDQ.L  #4,(A1)
REMTAIL\@
 ENDM
 ENDC !EXEC_LISTS_I

; >>> BEGIN exec/ports.i

 IFND EXEC_PORTS_I
EXEC_PORTS_I SET 1
 IFND EXEC_NODES_I
 ENDC !EXEC_NODES_I
 IFND EXEC_LISTS_I
 ENDC !EXEC_LISTS_I
 STRUCTURE  MP,LN_SIZE
 UBYTE   MP_FLAGS
 UBYTE   MP_SIGBIT
 APTR    MP_SIGTASK
 STRUCT  MP_MSGLIST,LH_SIZE
 LABEL   MP_SIZE
MP_SOFTINT      EQU  MP_SIGTASK
PF_ACTION       EQU  3
PA_SIGNAL       EQU  0
PA_SOFTINT      EQU  1
PA_IGNORE       EQU  2
 STRUCTURE  MN,LN_SIZE
 APTR    MN_REPLYPORT
 UWORD   MN_LENGTH
 LABEL   MN_SIZE
 ENDC !EXEC_PORTS_I

; >>> BEGIN exec/libraries.i

 IFND EXEC_LIBRARIES_I
EXEC_LIBRARIES_I SET 1
 IFND EXEC_NODES_I
 ENDC !EXEC_NODES_I
LIB_VECTSIZE    EQU     6
LIB_RESERVED    EQU     4
LIB_BASE        EQU     $FFFFFFFA
LIB_USERDEF     EQU     LIB_BASE-(LIB_RESERVED*LIB_VECTSIZE)
LIB_NONSTD      EQU     LIB_USERDEF
LIBINIT     MACRO
 IFC     '\1',''
COUNT_LIB   SET     LIB_USERDEF
 ENDC
 IFNC    '\1',''
COUNT_LIB   SET     \1
 ENDC
 ENDM
LIBDEF      MACRO
\1          EQU     COUNT_LIB
COUNT_LIB   SET     COUNT_LIB-LIB_VECTSIZE
 ENDM
 LIBINIT LIB_BASE
 LIBDEF  LIB_OPEN
 LIBDEF  LIB_CLOSE
 LIBDEF  LIB_EXPUNGE
 LIBDEF  LIB_EXTFUNC
 STRUCTURE LIB,LN_SIZE
 UBYTE   LIB_FLAGS
 UBYTE   LIB_pad
 UWORD   LIB_NEGSIZE
 UWORD   LIB_POSSIZE
 UWORD   LIB_VERSION
 UWORD   LIB_REVISION
 APTR    LIB_IDSTRING
 ULONG   LIB_SUM
 UWORD   LIB_OPENCNT
 LABEL   LIB_SIZE
 BITDEF  LIB,SUMMING,0
 BITDEF  LIB,CHANGED,1
 BITDEF  LIB,SUMUSED,2
 BITDEF  LIB,DELEXP,3
CALLLIB     MACRO
 IFGT NARG-1
 FAIL    !!! CALLLIB MACRO - too many arguments !!!
 ENDC
 JSR     \1(A6)
 ENDM
LINKLIB     MACRO
 IFGT NARG-2
 FAIL    !!! LINKLIB MACRO - too many arguments !!!
 ENDC
 MOVE.L  A6,-(SP)
 MOVE.L  \2,A6
 CALLLIB \1
 MOVE.L  (SP)+,A6
 ENDM
 ENDC !EXEC_LIBRARIES_I

; >>> BEGIN exec/io.i

 IFND EXEC_IO_I
EXEC_IO_I SET 1
 IFND EXEC_PORTS_I
 ENDC !EXEC_PORTS_I
 IFND EXEC_LIBRARIES_I
 ENDC !EXEC_LIBRARIES_I
 STRUCTURE  IO,MN_SIZE
 APTR    IO_DEVICE
 APTR    IO_UNIT
 UWORD   IO_COMMAND
 UBYTE   IO_FLAGS
 BYTE    IO_ERROR
 LABEL   IO_SIZE
 ULONG   IO_ACTUAL
 ULONG   IO_LENGTH
 APTR    IO_DATA
 ULONG   IO_OFFSET
 LABEL   IOSTD_SIZE
 BITDEF  IO,QUICK,0
 LIBINIT
 LIBDEF  DEV_BEGINIO
 LIBDEF  DEV_ABORTIO
BEGINIO     MACRO
 LINKLIB DEV_BEGINIO,IO_DEVICE(A1)
 ENDM
ABORTIO     MACRO
 LINKLIB DEV_ABORTIO,IO_DEVICE(A1)
 ENDM
DEVINIT     MACRO
 IFC     '\1',''
CMD_COUNT   SET     CMD_NONSTD
 ENDC
 IFNC    '\1',''
CMD_COUNT   SET     \1
 ENDC
 ENDM
DEVCMD      MACRO
\1          EQU     CMD_COUNT
CMD_COUNT   SET     CMD_COUNT+1
 ENDM
 DEVINIT 0
 DEVCMD  CMD_INVALID
 DEVCMD  CMD_RESET
 DEVCMD  CMD_READ
 DEVCMD  CMD_WRITE
 DEVCMD  CMD_UPDATE
 DEVCMD  CMD_CLEAR
 DEVCMD  CMD_STOP
 DEVCMD  CMD_START
 DEVCMD  CMD_FLUSH
 DEVCMD  CMD_NONSTD
 ENDC !EXEC_IO_I

; >>> BEGIN devices/audio.i

 IFND    DEVICES_AUDIO_I
DEVICES_AUDIO_I         SET     1
 IFND    EXEC_IO_I
 ENDC
AUDIONAME               MACRO
 DC.B    'audio.device',0
 ENDM
ADHARD_CHANNELS         EQU     4
ADALLOC_MINPREC         EQU     -128
ADALLOC_MAXPREC         EQU     127
ADCMD_FREE              EQU     CMD_NONSTD+0
ADCMD_SETPREC           EQU     CMD_NONSTD+1
ADCMD_FINISH            EQU     CMD_NONSTD+2
ADCMD_PERVOL            EQU     CMD_NONSTD+3
ADCMD_LOCK              EQU     CMD_NONSTD+4
ADCMD_WAITCYCLE         EQU     CMD_NONSTD+5
ADCMDB_NOUNIT           EQU     5
ADCMDF_NOUNIT           EQU     1<<5
ADCMD_ALLOCATE          EQU     ADCMDF_NOUNIT+0
ADIOB_PERVOL            EQU     4
ADIOF_PERVOL            EQU     1<<4
ADIOB_SYNCCYCLE         EQU     5
ADIOF_SYNCCYCLE         EQU     1<<5
ADIOB_NOWAIT            EQU     6
ADIOF_NOWAIT            EQU     1<<6
ADIOB_WRITEMESSAGE      EQU     7
ADIOF_WRITEMESSAGE      EQU     1<<7
ADIOERR_NOALLOCATION    EQU     -10
ADIOERR_ALLOCFAILED     EQU     -11
ADIOERR_CHANNELSTOLEN   EQU     -12
 STRUCTURE       IOAudio,IO_SIZE
 WORD    ioa_AllocKey
 APTR    ioa_Data
 ULONG   ioa_Length
 UWORD   ioa_Period
 UWORD   ioa_Volume
 UWORD   ioa_Cycles
 STRUCT  ioa_WriteMsg,MN_SIZE
 LABEL   ioa_SIZEOF
 ENDC

; >>> BEGIN devices/bootblock.i

 IFND    DEVICES_BOOTBLOCK_I
DEVICES_BOOTBLOCK_I     EQU     1
 IFND EXEC_TYPES_I
 ENDC !EXEC_TYPES_I
 STRUCTURE BB,0
 STRUCT  BB_ID,4
 LONG    BB_CHKSUM
 LONG    BB_DOSBLOCK
 LABEL   BB_ENTRY
 LABEL   BB_SIZE
BOOTSECTS       equ     2
BBID_DOS        macro
 dc.b    'DOS',0
 endm
BBID_KICK       macro
 dc.b    'KICK'
 endm
BBNAME_DOS      EQU     (('D'<<24)!('O'<<16)!('S'<<8))
BBNAME_KICK     EQU     (('K'<<24)!('I'<<16)!('C'<<8)!('K'))
 ENDC

; >>> BEGIN devices/clipboard.i

 IFND     DEVICES_CLIPBOARD_I
DEVICES_CLIPBOARD_I  EQU   1
 IFND     EXEC_NODES_I
 ENDC
 IFND     EXEC_LISTS_I
 ENDC
 IFND     EXEC_PORTS_I
 ENDC
 IFND     EXEC_IO_I
 ENDC
 DEVINIT
 DEVCMD   CBD_POST
 DEVCMD   CBD_CURRENTREADID
 DEVCMD   CBD_CURRENTWRITEID
CBERR_OBSOLETEID  EQU   1
 STRUCTURE  ClipboardUnitPartial,0
 STRUCT  cu_Node,LN_SIZE;
 ULONG   cu_UnitNum;
 STRUCTURE  IOClipReq,0
 STRUCT  io_Message,MN_SIZE
 APTR    io_Device
 APTR    io_Unit
 UWORD   io_Command
 UBYTE   io_Flags
 BYTE    io_Error
 ULONG   io_Actual
 ULONG   io_Length
 APTR    io_Data
 ULONG   io_Offset
 LONG    io_ClipID
 LABEL   iocr_SIZEOF
PRIMARY_CLIP   EQU   0
 STRUCTURE  SatisfyMsg,0
 STRUCT  sm_Msg,MN_SIZE
 UWORD   sm_Unit
 LONG    sm_ClipID
 LABEL   satisfyMsg_SIZEOF
 ENDC

; >>> BEGIN devices/keymap.i

 IFND  DEVICES_KEYMAP_I
DEVICES_KEYMAP_I  SET   1
 IFND     EXEC_NODES_I
 ENDC
 IFND     EXEC_LISTS_I
 ENDC
 STRUCTURE  KeyMap,0
 APTR  km_LoKeyMapTypes
 APTR  km_LoKeyMap
 APTR  km_LoCapsable
 APTR  km_LoRepeatable
 APTR  km_HiKeyMapTypes
 APTR  km_HiKeyMap
 APTR  km_HiCapsable
 APTR  km_HiRepeatable
 LABEL km_SIZEOF
 STRUCTURE      KeyMapNode,0
 STRUCT  kn_Node,LN_SIZE
 STRUCT  kn_KeyMap,km_SIZEOF
 LABEL   kn_SIZEOF
 STRUCTURE      KeyMapResource,0
 STRUCT  kr_Node,LN_SIZE
 STRUCT  kr_List,LH_SIZE
 LABEL   kr_SIZEOF
KCB_NOP     EQU   7
KCF_NOP     EQU   $80
KC_NOQUAL   EQU   0
KC_VANILLA  EQU   7
KCB_SHIFT   EQU   0
KCF_SHIFT   EQU   $01
KCB_ALT     EQU   1
KCF_ALT     EQU   $02
KCB_CONTROL EQU   2
KCF_CONTROL EQU   $04
KCB_DOWNUP  EQU   3
KCF_DOWNUP  EQU   $08
KCB_DEAD    EQU   5
KCF_DEAD    EQU   $20
KCB_STRING  EQU   6
KCF_STRING  EQU   $40
DPB_MOD         EQU     0
DPF_MOD         EQU     $01
DPB_DEAD        EQU     3
DPF_DEAD        EQU     $08
DP_2DINDEXMASK  EQU     $0F
DP_2DFACSHIFT   EQU     4
 ENDC

; >>> BEGIN devices/timer.i

 IFND    DEVICES_TIMER_I
DEVICES_TIMER_I SET     1
 IFND    EXEC_IO_I
 ENDC    EXEC_IO_I
UNIT_MICROHZ    EQU     0
UNIT_VBLANK     EQU     1
TIMERNAME       MACRO
 DC.B    'timer.device',0
 DS.W    0
 ENDM
 STRUCTURE TIMEVAL,0
 ULONG   TV_SECS
 ULONG   TV_MICRO
 LABEL   TV_SIZE
 STRUCTURE TIMEREQUEST,IO_SIZE
 STRUCT  IOTV_TIME,TV_SIZE
 LABEL   IOTV_SIZE
 DEVINIT
 DEVCMD  TR_ADDREQUEST
 DEVCMD  TR_GETSYSTIME
 DEVCMD  TR_SETSYSTIME
 ENDC

; >>> BEGIN devices/inputevent.i

 IFND  DEVICES_INPUTEVENT_I
DEVICES_INPUTEVENT_I SET   1
 IFND  DEVICES_TIMER_I
 ENDC
IECLASS_NULL            EQU   $00
IECLASS_RAWKEY          EQU   $01
IECLASS_RAWMOUSE        EQU   $02
IECLASS_EVENT           EQU   $03
IECLASS_POINTERPOS      EQU   $04
IECLASS_TIMER           EQU   $06
IECLASS_GADGETDOWN      EQU $07
IECLASS_GADGETUP        EQU   $08
IECLASS_REQUESTER       EQU   $09
IECLASS_MENULIST        EQU   $0A
IECLASS_CLOSEWINDOW     EQU   $0B
IECLASS_SIZEWINDOW      EQU   $0C
IECLASS_REFRESHWINDOW   EQU   $0D
IECLASS_NEWPREFS        EQU   $0E
IECLASS_DISKREMOVED     EQU   $0F
IECLASS_DISKINSERTED    EQU   $10
IECLASS_ACTIVEWINDOW    EQU   $11
IECLASS_INACTIVEWINDOW  EQU   $12
IECLASS_MAX             EQU   $12
IECODE_UP_PREFIX        EQU   $80
IECODEB_UP_PREFIX       EQU   7
IECODE_KEY_CODE_FIRST   EQU   $00
IECODE_KEY_CODE_LAST    EQU   $77
IECODE_COMM_CODE_FIRST  EQU   $78
IECODE_COMM_CODE_LAST   EQU   $7F
IECODE_C0_FIRST         EQU   $00
IECODE_C0_LAST          EQU   $1F
IECODE_ASCII_FIRST      EQU   $20
IECODE_ASCII_LAST       EQU   $7E
IECODE_ASCII_DEL        EQU   $7F
IECODE_C1_FIRST         EQU   $80
IECODE_C1_LAST          EQU   $9F
IECODE_LATIN1_FIRST     EQU   $A0
IECODE_LATIN1_LAST      EQU   $FF
IECODE_LBUTTON          EQU   $68
IECODE_RBUTTON          EQU   $69
IECODE_MBUTTON          EQU   $6A
IECODE_NOBUTTON         EQU   $FF
IECODE_NEWACTIVE        EQU   $01
IECODE_REQSET           EQU   $01
IECODE_REQCLEAR         EQU   $00
IEQUALIFIER_LSHIFT      EQU   $0001
IEQUALIFIERB_LSHIFT     EQU   0
IEQUALIFIER_RSHIFT      EQU   $0002
IEQUALIFIERB_RSHIFT     EQU   1
IEQUALIFIER_CAPSLOCK    EQU   $0004
IEQUALIFIERB_CAPSLOCK   EQU   2
IEQUALIFIER_CONTROL     EQU   $0008
IEQUALIFIERB_CONTROL    EQU   3
IEQUALIFIER_LALT        EQU   $0010
IEQUALIFIERB_LALT       EQU   4
IEQUALIFIER_RALT        EQU   $0020
IEQUALIFIERB_RALT       EQU   5
IEQUALIFIER_LCOMMAND    EQU   $0040
IEQUALIFIERB_LCOMMAND   EQU   6
IEQUALIFIER_RCOMMAND    EQU   $0080
IEQUALIFIERB_RCOMMAND   EQU   7
IEQUALIFIER_NUMERICPAD  EQU   $0100
IEQUALIFIERB_NUMERICPAD EQU   8
IEQUALIFIER_REPEAT      EQU   $0200
IEQUALIFIERB_REPEAT     EQU   9
IEQUALIFIER_INTERRUPT   EQU   $0400
IEQUALIFIERB_INTERRUPT  EQU   10
IEQUALIFIER_MULTIBROADCAST    EQU   $0800
IEQUALIFIERB_MULTIBROADCAST   EQU   11
IEQUALIFIER_MIDBUTTON   EQU   $1000
IEQUALIFIERB_MIDBUTTON  EQU   12
IEQUALIFIER_RBUTTON     EQU   $2000
IEQUALIFIERB_RBUTTON    EQU   13
IEQUALIFIER_LEFTBUTTON  EQU   $4000
IEQUALIFIERB_LEFTBUTTON EQU   14
IEQUALIFIER_RELATIVEMOUSE     EQU   $8000
IEQUALIFIERB_RELATIVEMOUSE    EQU   15
 STRUCTURE  InputEvent,0
 APTR  ie_NextEvent
 UBYTE   ie_Class
 UBYTE   ie_SubClass
 UWORD   ie_Code
 UWORD   ie_Qualifier
 LABEL ie_EventAddress
 WORD    ie_X
 WORD    ie_Y
 STRUCT  ie_TimeStamp,TV_SIZE
 LABEL   ie_SIZEOF
 ENDC

; >>> BEGIN devices/console.i

 IFND  DEVICES_CONSOLE_I
DEVICES_CONSOLE_I SET   1
 IFND  EXEC_IO_I
 ENDC
 DEVINIT
 DEVCMD         CD_ASKKEYMAP
 DEVCMD         CD_SETKEYMAP
 DEVCMD         CD_ASKDEFAULTKEYMAP
 DEVCMD         CD_SETDEFAULTKEYMAP
SGR_PRIMARY       EQU   0
SGR_BOLD          EQU   1
SGR_ITALIC        EQU   3
SGR_UNDERSCORE    EQU   4
SGR_NEGATIVE      EQU   7
SGR_BLACK         EQU   30
SGR_RED           EQU   31
SGR_GREEN         EQU   32
SGR_YELLOW        EQU   33
SGR_BLUE          EQU   34
SGR_MAGENTA       EQU   35
SGR_CYAN          EQU   36
SGR_WHITE         EQU   37
SGR_DEFAULT       EQU   39
SGR_BLACKBG       EQU   40
SGR_REDBG         EQU   41
SGR_GREENBG       EQU   42
SGR_YELLOWBG      EQU   43
SGR_BLUEBG        EQU   44
SGR_MAGENTABG     EQU   45
SGR_CYANBG        EQU   46
SGR_WHITEBG       EQU   47
SGR_DEFAULTBG     EQU   49
SGR_CLR0          EQU   30
SGR_CLR1          EQU   31
SGR_CLR2          EQU   32
SGR_CLR3          EQU   33
SGR_CLR4          EQU   34
SGR_CLR5          EQU   35
SGR_CLR6          EQU   36
SGR_CLR7          EQU   37
SGR_CLR0BG        EQU   40
SGR_CLR1BG        EQU   41
SGR_CLR2BG        EQU   42
SGR_CLR3BG        EQU   43
SGR_CLR4BG        EQU   44
SGR_CLR5BG        EQU   45
SGR_CLR6BG        EQU   46
SGR_CLR7BG        EQU   47
DSR_CPR           EQU   6
CTC_HSETTAB       EQU   0
CTC_HCLRTAB       EQU   2
CTC_HCLRTABSALL   EQU   5
TBC_HCLRTAB       EQU   0
TBC_HCLRTABSALL   EQU   3
M_LNM             EQU   20
M_ASM    MACRO
 DC.B  '>1'
 ENDM
M_AWM    MACRO
 DC.B  '?7'
 ENDM
 ENDC

; >>> BEGIN devices/conunit.i

 IFND    DEVICES_CONUNIT_I
DEVICES_CONUNIT_I       EQU     1
 IFND  EXEC_PORTS_I
 ENDC
 IFND  DEVICES_KEYMAP_I
 ENDC
 IFND    DEVICES_INPUTEVENT_I
 ENDC
 IFND    DEVICES_CONSOLE_I
 ENDC
PMB_ASM     EQU   M_LNM+1
PMB_AWM     EQU   PMB_ASM+1
MAXTABS     EQU   80
 STRUCTURE  ConUnit,MP_SIZE
 APTR  cu_Window
 WORD  cu_XCP
 WORD  cu_YCP
 WORD  cu_XMax
 WORD  cu_YMax
 WORD  cu_XRSize
 WORD  cu_YRSize
 WORD  cu_XROrigin
 WORD  cu_YROrigin
 WORD  cu_XRExtant
 WORD  cu_YRExtant
 WORD  cu_XMinShrink
 WORD  cu_YMinShrink
 WORD  cu_XCCP
 WORD  cu_YCCP
 STRUCT   cu_KeyMapStruct,km_SIZEOF
 STRUCT   cu_TabStops,2*MAXTABS
 BYTE  cu_Mask
 BYTE  cu_FgPen
 BYTE  cu_BgPen
 BYTE  cu_AOLPen
 BYTE  cu_DrawMode
 BYTE  cu_AreaPtSz
 APTR  cu_AreaPtrn
 STRUCT   cu_Minterms,8
 APTR  cu_Font
 UBYTE cu_AlgoStyle
 UBYTE cu_TxFlags
 UWORD cu_TxHeight
 UWORD cu_TxWidth
 UWORD cu_TxBaseline
 UWORD cu_TxSpacing
 STRUCT   cu_Modes,<(PMB_AWM+7)/8>
 STRUCT   cu_RawEvents,<(IECLASS_MAX+7)/8>
ODDEVEN  EQU   ((PMB_AWM+7)/8)+((IECLASS_MAX+7)/8)
 IFNE  ODDEVEN-((ODDEVEN/2)*2)
 UBYTE cu_pad   
 ENDC
 LABEL ConUnit_SIZEOF
 ENDC

; >>> BEGIN devices/gameport.i

 IFND  DEVICES_GAMEPORT_I
DEVICES_GAMEPORT_I   SET   1
 IFND  EXEC_IO_I
 ENDC
 DEVINIT
 DEVCMD   GPD_READEVENT
 DEVCMD   GPD_ASKCTYPE
 DEVCMD   GPD_SETCTYPE
 DEVCMD   GPD_ASKTRIGGER
 DEVCMD   GPD_SETTRIGGER
 BITDEF       GPT,DOWNKEYS,0
 BITDEF       GPT,UPKEYS,1
 STRUCTURE  GamePortTrigger,0
 UWORD   gpt_Keys
 UWORD   gpt_Timeout
 UWORD   gpt_XDelta
 UWORD   gpt_YDelta
 LABEL   gpt_SIZEOF
GPCT_ALLOCATED    EQU   -1
GPCT_NOCONTROLLER EQU   0
GPCT_MOUSE        EQU   1
GPCT_RELJOYSTICK  EQU   2
GPCT_ABSJOYSTICK  EQU   3
GPDERR_SETCTYPE   EQU   1
 ENDC

; >>> BEGIN devices/input.i

 IFND  DEVICES_INPUT_I
DEVICES_INPUT_I   SET   1
 IFND     EXEC_IO_I
 ENDC
 DEVINIT
 DEVCMD       IND_ADDHANDLER
 DEVCMD       IND_REMHANDLER
 DEVCMD       IND_WRITEEVENT
 DEVCMD       IND_SETTHRESH
 DEVCMD       IND_SETPERIOD
 DEVCMD       IND_SETMPORT
 DEVCMD       IND_SETMTYPE
 DEVCMD       IND_SETMTRIG
 ENDC

; >>> BEGIN devices/keyboard.i

 IFND  DEVICES_KEYBOARD_I
DEVICES_KEYBOARD_I   SET   1
 IFND     EXEC_IO_I
 ENDC
 DEVINIT
 DEVCMD       KBD_READEVENT
 DEVCMD       KBD_READMATRIX
 DEVCMD       KBD_ADDRESETHANDLER
 DEVCMD       KBD_REMRESETHANDLER
 DEVCMD       KBD_RESETHANDLERDONE
 ENDC

; >>> BEGIN devices/narrator.i

 TTL     '$Header: narrator.i,v 32.1 86/01/22 00:25:26 sam Exp $'
 IFND    DEVICES_NARRATOR_I
DEVICES_NARRATOR_I      SET     1
 IFND    EXEC_IO_I
 ENDC
DEFPITCH  EQU       110
DEFRATE   EQU       150
DEFVOL    EQU       64
DEFFREQ   EQU       22200
NATURALF0 EQU       0
ROBOTICF0 EQU       1
MALE      EQU       0
FEMALE    EQU       1
DEFSEX    EQU       MALE
DEFMODE   EQU       NATURALF0
MINRATE   EQU       40
MAXRATE   EQU       400
MINPITCH  EQU       65
MAXPITCH  EQU       320
MINFREQ   EQU       5000
MAXFREQ   EQU       28000
MINVOL    EQU       0
MAXVOL    EQU       64
ND_NotUsed      EQU     -1
ND_NoMem        EQU     -2
ND_NoAudLib     EQU     -3
ND_MakeBad      EQU     -4
ND_UnitErr      EQU     -5
ND_CantAlloc    EQU     -6
ND_Unimpl       EQU     -7
ND_NoWrite      EQU     -8
ND_Expunged     EQU     -9
ND_PhonErr      EQU     -20
ND_RateErr      EQU     -21
ND_PitchErr     EQU     -22
ND_SexErr       EQU     -23
ND_ModeErr      EQU     -24
ND_FreqErr      EQU     -25
ND_VolErr       EQU     -26
 STRUCTURE NDI,IOSTD_SIZE
 UWORD   NDI_RATE
 UWORD   NDI_PITCH
 UWORD   NDI_MODE
 UWORD   NDI_SEX
 APTR    NDI_CHMASKS
 UWORD   NDI_NUMMASKS
 UWORD   NDI_VOLUME
 UWORD   NDI_SAMPFREQ
 UBYTE   NDI_MOUTHS
 UBYTE   NDI_CHANMASK
 UBYTE   NDI_NUMCHAN
 UBYTE   NDI_PAD
 LABEL   NDI_SIZE
 STRUCTURE MRB,NDI_SIZE
 UBYTE   MRB_WIDTH
 UBYTE   MRB_HEIGHT
 UBYTE   MRB_SHAPE
 UBYTE   MRB_PAD
 LABEL   MRB_SIZE
 ENDC

; >>> BEGIN devices/printer.i

 IFND  DEVICES_PRINTER_I
DEVICES_PRINTER_I EQU   1
 IFND  EXEC_NODES_I
 ENDC
 IFND  EXEC_LISTS_I
 ENDC
 IFND  EXEC_PORTS_I
 ENDC
 IFND  EXEC_IO_I
 ENDC
 DEVINIT
 DEVCMD   PRD_RAWWRITE
 DEVCMD   PRD_PRTCOMMAND
 DEVCMD   PRD_DUMPRPORT
aRIS     EQU    0
aRIN     EQU    1
aIND     EQU    2
aNEL     EQU    3
aRI      EQU    4
aSGR0    EQU    5
aSGR3    EQU    6
aSGR23   EQU    7
aSGR4    EQU    8
aSGR24   EQU    9
aSGR1    EQU   10
aSGR22   EQU   11
aSFC     EQU   12
aSBC     EQU   13
aSHORP0  EQU   14
aSHORP2  EQU   15
aSHORP1  EQU   16
aSHORP4  EQU   17
aSHORP3  EQU   18
aSHORP6  EQU   19
aSHORP5  EQU   20
aDEN6    EQU   21
aDEN5    EQU   22
aDEN4    EQU   23
aDEN3    EQU   24
aDEN2    EQU   25
aDEN1    EQU   26
aSUS2    EQU   27
aSUS1    EQU   28
aSUS4    EQU   29
aSUS3    EQU   30
aSUS0    EQU   31
aPLU     EQU   32
aPLD     EQU   33
aFNT0    EQU   34
aFNT1    EQU   35
aFNT2    EQU   36
aFNT3    EQU   37
aFNT4    EQU   38
aFNT5    EQU   39
aFNT6    EQU   40
aFNT7    EQU   41
aFNT8    EQU   42
aFNT9    EQU   43
aFNT10   EQU   44
aPROP2   EQU   45
aPROP1   EQU   46
aPROP0   EQU   47
aTSS     EQU   48
aJFY5    EQU   49
aJFY7    EQU   50
aJFY6    EQU   51
aJFY0    EQU   52
aJFY2    EQU   53
aJFY3    EQU   54
aVERP0   EQU   55
aVERP1   EQU   56
aSLPP    EQU   57
aPERF    EQU   58
aPERF0   EQU   59
aLMS     EQU   60
aRMS     EQU   61
aTMS     EQU   62
aBMS     EQU   63
aSTBM    EQU   64
aSLRM    EQU   65
aCAM     EQU   66
aHTS     EQU   67
aVTS     EQU   68
aTBC0    EQU   69
aTBC3    EQU   70
aTBC1    EQU   71
aTBC4    EQU   72
aTBCALL  EQU   73
aTBSALL  EQU   74
aEXTEND  EQU   75
 STRUCTURE IOPrtCmdReq,IO_SIZE
 UWORD   io_PrtCommand
 UBYTE   io_Parm0
 UBYTE   io_Parm1
 UBYTE   io_Parm2
 UBYTE   io_Parm3
 LABEL   iopcr_SIZEOF
 STRUCTURE  IODRPReq,IO_SIZE
 APTR    io_RastPort
 APTR    io_ColorMap
 ULONG   io_Modes
 UWORD   io_SrcX
 UWORD   io_SrcY
 UWORD   io_SrcWidth
 UWORD   io_SrcHeight
 LONG    io_DestCols
 LONG    io_DestRows
 UWORD   io_Special
 LABEL   iodrpr_SIZEOF
SPECIAL_MILCOLS      EQU   $01
SPECIAL_MILROWS      EQU   $02
SPECIAL_FULLCOLS     EQU   $04
SPECIAL_FULLROWS     EQU   $08
SPECIAL_FRACCOLS     EQU   $10
SPECIAL_FRACROWS     EQU   $20
SPECIAL_ASPECT       EQU   $80
SPECIAL_DENSITYMASK  EQU   $F00
SPECIAL_DENSITY1     EQU   $100
SPECIAL_DENSITY2     EQU   $200
SPECIAL_DENSITY3     EQU   $300
SPECIAL_DENSITY4     EQU   $400
SPECIAL_CENTER                  EQU     $40
PDERR_CANCEL         EQU   1
PDERR_NOTGRAPHICS    EQU   2
PDERR_INVERTHAM      EQU   3
PDERR_BADDIMENSION   EQU   4
PDERR_DIMENSIONOVFLOW EQU  5
PDERR_INTERNALMEMORY EQU   6
PDERR_BUFFERMEMORY   EQU   7
 ENDC

; >>> BEGIN exec/tasks.i

 IFND EXEC_TASKS_I
EXEC_TASKS_I SET 1
 IFND EXEC_NODES_I
 ENDC !EXEC_NODES_I
 IFND EXEC_LISTS_I
 ENDC !EXEC_LISTS_I
 STRUCTURE  TC,LN_SIZE
 UBYTE   TC_FLAGS
 UBYTE   TC_STATE
 BYTE    TC_IDNESTCNT
 BYTE    TC_TDNESTCNT
 ULONG   TC_SIGALLOC
 ULONG   TC_SIGWAIT
 ULONG   TC_SIGRECVD
 ULONG   TC_SIGEXCEPT
 UWORD   TC_TRAPALLOC
 UWORD   TC_TRAPABLE
 APTR    TC_EXCEPTDATA
 APTR    TC_EXCEPTCODE
 APTR    TC_TRAPDATA
 APTR    TC_TRAPCODE
 APTR    TC_SPREG
 APTR    TC_SPLOWER
 APTR    TC_SPUPPER
 APTR    TC_SWITCH
 APTR    TC_LAUNCH
 STRUCT  TC_MEMENTRY,LH_SIZE
 APTR    TC_Userdata
 LABEL   TC_SIZE
 BITDEF  T,PROCTIME,0
 BITDEF  T,STACKCHK,4
 BITDEF  T,EXCEPT,5
 BITDEF  T,SWITCH,6
 BITDEF  T,LAUNCH,7
TS_INVALID  EQU     0
TS_ADDED    EQU     TS_INVALID+1
TS_RUN      EQU     TS_ADDED+1
TS_READY    EQU     TS_RUN+1
TS_WAIT     EQU     TS_READY+1
TS_EXCEPT   EQU     TS_WAIT+1
TS_REMOVED  EQU     TS_EXCEPT+1
SIGF_ABORT      EQU     $0001
SIGF_CHILD      EQU     $0002
SIGF_BLIT       EQU     $0010
SIGF_SINGLE     EQU     $0010
SIGF_DOS        EQU     $0100
SIGB_ABORT      EQU     0
SIGB_CHILD      EQU     1
SIGB_BLIT       EQU     4
SIGB_SINGLE     EQU     4
SIGB_DOS        EQU     8
SYS_SIGALLOC    EQU     $0FFFF
SYS_TRAPALLOC   EQU     $08000
 ENDC !EXEC_TASKS_I

; >>> BEGIN exec/strings.i

 IFND EXEC_STRINGS_I
EXEC_STRINGS_I SET 1
EOS             EQU     0
BELL            EQU     7
LF              EQU     10
CR              EQU     13
BS              EQU     8
DEL             EQU     $7F
NL              EQU     LF
STRING      MACRO
 DC.B    \1
 DC.B    0
 CNOP    0,2
 ENDM
STRINGL     MACRO
 DC.B    13,10
 DC.B    \1
 DC.B    0
 CNOP    0,2
 ENDM
STRINGR     MACRO
 DC.B    \1
 DC.B    13,10,0
 CNOP    0,2
 ENDM
STRINGLR    MACRO
 DC.B    13,10
 DC.B    \1
 DC.B    13,10,0
 CNOP    0,2
 ENDM
 ENDC !EXEC_STRINGS_I

; >>> BEGIN devices/parallel.i

 IFND     DEVICES_PARALLEL_I
DEVICES_PARALLEL_I SET 1
 IFND     EXEC_STRINGS_I
 ENDC    !EXEC_STRINGS_I
 IFND     EXEC_IO_I
 ENDC    !EXEC_IO_I
ParErr_DevBusy          EQU     1
ParErr_BufTooBig        EQU     2
ParErr_InvParam         EQU     3
ParErr_LineErr          EQU     4
ParErr_NotOpen          EQU     5
ParErr_PortReset        EQU     6
ParErr_InitErr          EQU     7
PDCMD_QUERY        EQU     CMD_NONSTD 
PDCMD_SETPARAMS    EQU     CMD_NONSTD+1
Par_DEVFINISH      EQU     10
PARALLELNAME:   MACRO
 STRING  'parallel.device'
 ENDM
 BITDEF  PAR,SHARED,5
 BITDEF  PAR,RAD_BOOGIE,3
 BITDEF  PAR,EOFMODE,1
 BITDEF  IOPAR,QUEUED,6
 BITDEF  IOPAR,ABORT,5
 BITDEF  IOPAR,ACTIVE,4
 BITDEF  IOPT,RWDIR,3
 BITDEF  IOPT,PBUSY,2
 BITDEF  IOPT,PAPEROUT,1
 BITDEF  IOPT,PSEL,0
 STRUCTURE PTERMARRAY,0
 ULONG    PTERMARRAY_0
 ULONG    PTERMARRAY_1
 LABEL    PTERMARRAY_SIZE
 STRUCTURE IOEXTPAR,IOSTD_SIZE
 ULONG   IO_PEXTFLAGS
 UBYTE   IO_PARSTATUS
 UBYTE   IO_PARFLAGS
 STRUCT  IO_PTERMARRAY,PTERMARRAY_SIZE
 LABEL   IOEXTPar_SIZE
 ENDC    !DEVICES_PARALLEL_I

; >>> BEGIN devices/serial.i

 IFND    DEVICES_SERIAL_I
DEVICES_SERIAL_I SET 1
 IFND     EXEC_STRINGS_I
 ENDC    !EXEC_STRINGS_I
 IFND     EXEC_IO_I
 ENDC    !EXEC_IO_I
SER_CTL       EQU     $1113
SER_DBAUD     EQU     9600
SDCMD_QUERY     EQU     CMD_NONSTD
SDCMD_BREAK     EQU     CMD_NONSTD+1
SDCMD_SETPARAMS EQU     CMD_NONSTD+2
SER_DEVFINISH   EQU     CMD_NONSTD+2
SERIALNAME:     MACRO
 STRING  'serial.device'
 ENDM
 BITDEF  SER,XDISABLED,7
 BITDEF  SER,EOFMODE,6
 BITDEF  SER,SHARED,5
 BITDEF  SER,RAD_BOOGIE,4
 BITDEF  SER,QUEUEDBRK,3
 BITDEF  SER,7WIRE,2
 BITDEF  SER,PARTY_ODD,1
 BITDEF  SER,PARTY_ON,0
 BITDEF  IOSER,QUEUED,6
 BITDEF  IOSER,ABORT,5
 BITDEF  IOSER,ACTIVE,4
 BITDEF  IOST,XOFFREAD,4
 BITDEF  IOST,XOFFWRITE,3
 BITDEF  IOST,READBREAK,2
 BITDEF  IOST,WROTEBREAK,1
 BITDEF  IOST,OVERRUN,0
 BITDEF  SEXT,MSPON,1
 BITDEF  SEXT,MARK,0
 STRUCTURE TERMARRAY,0
 ULONG    TERMARRAY_0
 ULONG    TERMARRAY_1
 LABEL    TERMARRAY_SIZE
 STRUCTURE IOEXTSER,IOSTD_SIZE
 ULONG   IO_CTLCHAR
 ULONG   IO_RBUFLEN
 ULONG   IO_EXTFLAGS
 ULONG   IO_BAUD
 ULONG   IO_BRKTIME
 STRUCT  IO_TERMARRAY,TERMARRAY_SIZE
 UBYTE   IO_READLEN
 UBYTE   IO_WRITELEN
 UBYTE   IO_STOPBITS
 UBYTE   IO_SERFLAGS
 UWORD   IO_STATUS
 LABEL   IOEXTSER_SIZE
SerErr_DevBusy          EQU     1
SerErr_BaudMismatch     EQU     2
SerErr_InvBaud          EQU     3
SerErr_BufErr           EQU     4
SerErr_InvParam         EQU     5
SerErr_LineErr          EQU     6
SerErr_NotOpen          EQU     7    
SerErr_PortReset        EQU     8   
SerErr_ParityErr        EQU     9
SerErr_InitErr          EQU    10
SerErr_TimerErr         EQU    11
SerErr_BufOverflow      EQU    12
SerErr_NoDSR            EQU    13
SerErr_NoCTS            EQU    14
SerErr_DetectedBreak    EQU    15
 ENDC    !DEVICES_SERIAL_I 

; >>> BEGIN libraries/dos.i

 IFND LIBRARIES_DOS_I
LIBRARIES_DOS_I            SET      1
 IFND EXEC_TYPES_I
 ENDC
DOSNAME     MACRO
 DC.B  'dos.library',0
 ENDM
MODE_OLDFILE         EQU   1005
MODE_NEWFILE         EQU   1006
OFFSET_BEGINNING     EQU   -1
OFFSET_CURRENT       EQU    0
OFFSET_END           EQU    1
OFFSET_BEGINING     EQU   OFFSET_BEGINNING
BITSPERBYTE          EQU   8
BYTESPERLONG         EQU   4
BITSPERLONG          EQU   32
MAXINT               EQU   $7FFFFFFF
MININT               EQU   $80000000
SHARED_LOCK          EQU   -2
ACCESS_READ          EQU   -2
EXCLUSIVE_LOCK       EQU   -1
ACCESS_WRITE         EQU   -1
 STRUCTURE DateStamp,0 
 LONG  ds_Days
 LONG  ds_Minute
 LONG  ds_Tick
 LABEL ds_SIZEOF
TICKS_PER_SECOND EQU 50
 STRUCTURE FileInfoBlock,0
 LONG   fib_DiskKey
 LONG   fib_DirEntryType
 STRUCT fib_FileName,108
 LONG   fib_Protection
 LONG   fib_EntryType
 LONG   fib_Size
 LONG   fib_NumBlocks
 STRUCT fib_DateStamp,ds_SIZEOF
 STRUCT fib_Comment,116
 LABEL  fib_SIZEOF
 BITDEF   FIB,ARCHIVE,4
 BITDEF   FIB,READ,3
 BITDEF   FIB,WRITE,2
 BITDEF   FIB,EXECUTE,1
 BITDEF   FIB,DELETE,0
BPTR     MACRO
 LONG     \1
 ENDM
BSTR     MACRO
 LONG     \1
 ENDM
 STRUCTURE InfoData,0
 LONG id_NumSoftErrors
 LONG id_UnitNumber
 LONG id_DiskState
 LONG id_NumBlocks
 LONG id_NumBlocksUsed
 LONG id_BytesPerBlock   
 LONG id_DiskType
 BPTR id_VolumeNode
 LONG id_InUse
 LABEL id_SIZEOF
ID_WRITE_PROTECTED      EQU     80
ID_VALIDATING           EQU     81
ID_VALIDATED            EQU     82
ID_NO_DISK_PRESENT      EQU -1
ID_UNREADABLE_DISK      EQU  ('B'<<24)!('A'<<16)!('D'<<8)
ID_NOT_REALLY_DOS       EQU  ('N'<<24)!('D'<<16)!('O'<<8)!('S')
ID_DOS_DISK             EQU  ('D'<<24)!('O'<<16)!('S'<<8)
ID_KICKSTART_DISK       EQU  ('K'<<24)!('I'<<16)!('C'<<8)!('K')
ERROR_NO_FREE_STORE               EQU  103
ERROR_TASK_TABLE_FULL             EQU  105
ERROR_LINE_TOO_LONG               EQU  120
ERROR_FILE_NOT_OBJECT             EQU  121
ERROR_INVALID_RESIDENT_LIBRARY    EQU  122
ERROR_OBJECT_IN_USE               EQU  202
ERROR_OBJECT_EXISTS               EQU  203
ERROR_OBJECT_NOT_FOUND            EQU  205
ERROR_ACTION_NOT_KNOWN            EQU  209
ERROR_INVALID_COMPONENT_NAME      EQU  210
ERROR_INVALID_LOCK                EQU  211
ERROR_OBJECT_WRONG_TYPE           EQU  212
ERROR_DISK_NOT_VALIDATED          EQU  213
ERROR_DISK_WRITE_PROTECTED        EQU  214
ERROR_RENAME_ACROSS_DEVICES       EQU  215
ERROR_DIRECTORY_NOT_EMPTY         EQU  216
ERROR_DEVICE_NOT_MOUNTED          EQU  218
ERROR_SEEK_ERROR                  EQU  219
ERROR_COMMENT_TOO_BIG             EQU  220   
ERROR_DISK_FULL                   EQU  221
ERROR_DELETE_PROTECTED            EQU  222
ERROR_WRITE_PROTECTED             EQU  223 
ERROR_READ_PROTECTED              EQU  224
ERROR_NOT_A_DOS_DISK              EQU  225
ERROR_NO_DISK                     EQU  226
ERROR_NO_MORE_ENTRIES             EQU  232
RETURN_OK                         EQU    0
RETURN_WARN                       EQU    5
RETURN_ERROR                      EQU   10
RETURN_FAIL                       EQU   20
 BITDEF  SIGBREAK,CTRL_C,12
 BITDEF  SIGBREAK,CTRL_D,13
 BITDEF  SIGBREAK,CTRL_E,14
 BITDEF  SIGBREAK,CTRL_F,15
 ENDC LIBRARIES_DOS_I

; >>> BEGIN libraries/dosextens.i

 IFND  LIBRARIES_DOSEXTENS_I
LIBRARIES_DOSEXTENS_I   SET   1
 IFND  EXEC_TYPES_I
 ENDC
 IFND  EXEC_TASKS_I
 ENDC
 IFND  EXEC_PORTS_I
 ENDC
 IFND  EXEC_LIBRARIES_I
 ENDC
 IFND  LIBRARIES_DOS_I
 ENDC
 STRUCTURE Process,0
 STRUCT  pr_Task,TC_SIZE
 STRUCT  pr_MsgPort,MP_SIZE
 WORD    pr_Pad
 BPTR    pr_SegList
 LONG    pr_StackSize
 APTR    pr_GlobVec
 LONG    pr_TaskNum
 BPTR    pr_StackBase
 LONG    pr_Result2
 BPTR    pr_CurrentDir
 BPTR    pr_CIS
 BPTR    pr_COS
 APTR    pr_ConsoleTask
 APTR    pr_FileSystemTask
 BPTR    pr_CLI
 APTR    pr_ReturnAddr
 APTR    pr_PktWait
 APTR    pr_WindowPtr
 LABEL   pr_SIZEOF
 STRUCTURE FileHandle,0
 APTR   fh_Link
 APTR   fh_Interactive
 APTR   fh_Type
 LONG   fh_Buf
 LONG   fh_Pos
 LONG   fh_End
 LONG   fh_Funcs
fh_Func1 EQU fh_Funcs
 LONG   fh_Func2
 LONG   fh_Func3
 LONG   fh_Args
fh_Arg1 EQU fh_Args
 LONG   fh_Arg2
 LABEL  fh_SIZEOF
 STRUCTURE DosPacket,0
 APTR   dp_Link
 APTR   dp_Port
 LONG   dp_Type
 LONG   dp_Res1
 LONG   dp_Res2
 LONG   dp_Arg1
dp_Action  EQU  dp_Type
dp_Status  EQU  dp_Res1
dp_Status2 EQU  dp_Res2
dp_BufAddr EQU  dp_Arg1
 LONG   dp_Arg2
 LONG   dp_Arg3
 LONG   dp_Arg4
 LONG   dp_Arg5
 LONG   dp_Arg6
 LONG   dp_Arg7
 LABEL  dp_SIZEOF
 STRUCTURE StandardPacket,0
 STRUCT sp_Msg,MN_SIZE
 STRUCT sp_Pkt,dp_SIZEOF
 LABEL  sp_SIZEOF
ACTION_NIL              EQU     0
ACTION_GET_BLOCK        EQU     2
ACTION_SET_MAP          EQU     4
ACTION_DIE              EQU     5
ACTION_EVENT            EQU     6
ACTION_CURRENT_VOLUME   EQU     7
ACTION_LOCATE_OBJECT    EQU     8
ACTION_RENAME_DISK      EQU     9
ACTION_WRITE            EQU     'W'
ACTION_READ             EQU     'R'
ACTION_FREE_LOCK        EQU     15
ACTION_DELETE_OBJECT    EQU     16
ACTION_RENAME_OBJECT    EQU     17
ACTION_COPY_DIR         EQU     19
ACTION_WAIT_CHAR        EQU     20
ACTION_SET_PROTECT      EQU     21
ACTION_CREATE_DIR       EQU     22
ACTION_EXAMINE_OBJECT   EQU     23
ACTION_EXAMINE_NEXT     EQU     24
ACTION_DISK_INFO        EQU     25
ACTION_INFO             EQU     26
ACTION_SET_COMMENT      EQU     28
ACTION_PARENT           EQU     29
ACTION_TIMER            EQU     30
ACTION_INHIBIT          EQU     31
ACTION_DISK_TYPE        EQU     32
ACTION_DISK_CHANGE      EQU     33
 STRUCTURE DosLibrary,0
 STRUCT  dl_lib,LIB_SIZE
 APTR    dl_Root
 APTR    dl_GV
 LONG    dl_A2
 LONG    dl_A5
 LONG    dl_A6
 LABEL   dl_SIZEOF
 STRUCTURE RootNode,0
 BPTR    rn_TaskArray
 BPTR    rn_ConsoleSegment
 STRUCT  rn_Time,ds_SIZEOF
 LONG    rn_RestartSeg
 BPTR    rn_Info
 BPTR    rn_FileHandlerSegment
 LABEL   rn_SIZEOF
 STRUCTURE DosInfo,0
 BPTR    di_McName
 BPTR    di_DevInfo
 BPTR    di_Devices
 BPTR    di_Handlers
 APTR    di_NetHand
 LABEL   di_SIZEOF
 STRUCTURE CommandLineInterface,0
 LONG   cli_Result2
 BSTR   cli_SetName
 BPTR   cli_CommandDir
 LONG   cli_ReturnCode
 BSTR   cli_CommandName
 LONG   cli_FailLevel
 BSTR   cli_Prompt
 BPTR   cli_StandardInput
 BPTR   cli_CurrentInput
 BSTR   cli_CommandFile
 LONG   cli_Interactive
 LONG   cli_Background
 BPTR   cli_CurrentOutput
 LONG   cli_DefaultStack
 BPTR   cli_StandardOutput
 BPTR   cli_Module
 LABEL  cli_SIZEOF
 STRUCTURE DevList,0
 BPTR        dl_Next
 LONG        dl_Type
 APTR        dl_Task
 BPTR        dl_Lock
 STRUCT      dl_VolumeDate,ds_SIZEOF
 BPTR        dl_LockList
 LONG        dl_DiskType
 LONG        dl_unused
 BSTR        dl_Name
 LABEL       DevList_SIZEOF
DLT_DEVICE      EQU     0
DLT_DIRECTORY   EQU     1
DLT_VOLUME      EQU     2
 STRUCTURE FileLock,0
 BPTR        fl_Link
 LONG        fl_Key
 LONG        fl_Access
 APTR        fl_Task
 BPTR        fl_Volume
 LABEL       fl_SIZEOF
 ENDC  LIBRARIES_DOSEXTENS_I

; >>> BEGIN graphics/gfx.i

 IFND    GRAPHICS_GFX_I
GRAPHICS_GFX_I  SET 1
 IFND EXEC_TYPES_I
 ENDC !EXEC_TYPES_I
BITSET      equ $8000
BITCLR      equ 0
AGNUS       equ 1
DENISE      equ 1
 STRUCTURE   BitMap,0
 WORD    bm_BytesPerRow
 WORD    bm_Rows
 BYTE    bm_Flags
 BYTE    bm_Depth
 WORD    bm_Pad
 STRUCT  bm_Planes,8*4
 LABEL   bm_SIZEOF
 STRUCTURE   Rectangle,0
 WORD  ra_MinX
 WORD  ra_MinY
 WORD  ra_MaxX
 WORD  ra_MaxY
 LABEL    ra_SIZEOF
 ENDC

; >>> BEGIN exec/semaphores.i

 IFND EXEC_SEMAPHORES_I
EXEC_SEMAPHORES_I SET 1
 IFND EXEC_NODES_I
 ENDC !EXEC_NODES_I
 IFND EXEC_LISTS_I
 ENDC !EXEC_LISTS_I
 IFND EXEC_PORTS_I
 ENDC !EXEC_PORTS_I
 STRUCTURE  SM,MP_SIZE
 WORD    SM_BIDS
 LABEL   SM_SIZE
SM_LOCKMSG    EQU  MP_SIGTASK
 STRUCTURE  SSR,MLN_SIZE
 APTR    SSR_WAITER
 LABEL   SSR_SIZE
 STRUCTURE  SS,LN_SIZE
 SHORT   SS_NESTCOUNT
 STRUCT  SS_WAITQUEUE,MLH_SIZE
 STRUCT  SS_MULTIPLELINK,SSR_SIZE
 APTR    SS_OWNER
 SHORT   SS_QUEUECOUNT
 LABEL   SS_SIZE
 ENDC !EXEC_SEMAPHORES_I

; >>> BEGIN graphics/clip.i

 IFND    GRAPHICS_CLIP_I
GRAPHICS_CLIP_I SET 1
 IFND    GRAPHICS_GFX_I
 ENDC
 IFND    EXEC_SEMAPHORES_I
 ENDC
NEWLOCKS        equ     1
 STRUCTURE  Layer,0
 LONG    lr_front
 LONG    lr_back
 LONG    lr_ClipRect
 LONG    lr_rp
 WORD    lr_MinX
 WORD    lr_MinY
 WORD    lr_MaxX
 WORD    lr_MaxY
 STRUCT  lr_reserved,4
 WORD    lr_priority
 WORD    lr_Flags
 LONG    lr_SuperBitMap
 LONG    lr_SuperClipRect
 APTR    lr_Window
 WORD    lr_Scroll_X
 WORD    lr_Scroll_Y
 APTR    lr_cr
 APTR    lr_cr2
 APTR    lr_crnew
 APTR    lr_SuperSaverClipRects
 APTR    lr__cliprects
 APTR    lr_LayerInfo
 STRUCT  lr_Lock,SS_SIZE
 STRUCT  lr_reserved3,8
 APTR    lr_ClipRegion
 APTR    lr_saveClipRects
 STRUCT  lr_reserved2,22
 APTR    lr_DamageList
 LABEL   lr_SIZEOF
 STRUCTURE  ClipRect,0
 LONG    cr_Next
 LONG    cr_prev
 LONG    cr_lobs
 LONG    cr_BitMap
 WORD    cr_MinX
 WORD    cr_MinY
 WORD    cr_MaxX
 WORD    cr_MaxY
 APTR    cr__p1
 APTR    cr__p2
 LONG    cr_reserved
 LONG    cr_Flags
 LABEL      cr_SIZEOF
CR_NEEDS_NO_CONCEALED_RASTERS   equ     1
ISLESSX equ 1
ISLESSY equ 2
ISGRTRX equ 4
ISGRTRY equ 8
 IFND    lr_Front
lr_Front        equ lr_front
lr_Back         equ lr_back
lr_RastPort     equ     lr_rp
cr_Prev         equ cr_prev
cr_LObs         equ     cr_lobs
 ENDC
 ENDC

; >>> BEGIN graphics/copper.i

 IFND  GRAPHICS_COPPER_I
GRAPHICS_COPPER_I SET   1
 IFND EXEC_TYPES_I
 ENDC !EXEC_TYPES_I
COPPER_MOVE equ 0
COPPER_WAIT equ 1
CPRNXTBUF   equ 2
CPR_NT_LOF  equ $8000
CPR_NT_SHT  equ $4000
 STRUCTURE   CopIns,0
 WORD  ci_OpCode
 STRUCT   ci_nxtlist,0
 STRUCT   ci_VWaitPos,0
 STRUCT   ci_DestAddr,2
 STRUCT   ci_HWaitPos,0
 STRUCT   ci_DestData,2
 LABEL ci_SIZEOF
 STRUCTURE   cprlist,0
 APTR  crl_Next
 APTR  crl_start
 WORD  crl_MaxCount
 LABEL crl_SIZEOF
 STRUCTURE   CopList,0
 APTR  cl_Next
 APTR  cl__CopList
 APTR  cl__ViewPort
 APTR  cl_CopIns
 APTR  cl_CopPtr
 APTR  cl_CopLStart
 APTR  cl_CopSStart
 WORD  cl_Count
 WORD  cl_MaxCount
 WORD  cl_DyOffset
 LABEL cl_SIZEOF
 STRUCTURE   UCopList,0
 APTR     ucl_Next
 APTR     ucl_FirstCopList
 APTR     ucl_CopList
 LABEL ucl_SIZEOF
 STRUCTURE   copinit,0
 STRUCT   copinit_diagstrt,8
 STRUCT   copinit_sprstrtup,2*((2*8*2)+2+(2*2)+2)
 STRUCT   copinit_sprstop,4
 LABEL copinit_SIZEOF
 ENDC

; >>> BEGIN graphics/view.i

 IFND    GRAPHICS_VIEW_I
GRAPHICS_VIEW_I SET 1
 IFND    GRAPHICS_GFX_I
 ENDC
 IFND    GRAPHICS_COPPER_I
 ENDC
V_PFBA      EQU     $40
V_DUALPF    EQU     $400
V_HIRES     EQU     $8000
V_LACE      EQU     4
V_HAM       EQU     $800
V_SPRITES   EQU     $4000
GENLOCK_VIDEO   EQU 2
 STRUCTURE   ColorMap,0
 BYTE  cm_Flags
 BYTE  cm_Type
 WORD  cm_Count
 APTR  cm_ColorTable
 LABEL cm_SIZEOF
 STRUCTURE      ViewPort,0
 LONG    vp_Next
 LONG    vp_ColorMap
 LONG    vp_DspIns
 LONG    vp_SprIns
 LONG    vp_ClrIns
 LONG    vp_UCopIns
 WORD    vp_DWidth
 WORD    vp_DHeight
 WORD    vp_DxOffset
 WORD    vp_DyOffset
 WORD    vp_Modes
 BYTE    vp_SpritePriorities
 BYTE    vp_reserved
 APTR    vp_RasInfo
 LABEL   vp_SIZEOF
 STRUCTURE View,0
 LONG    v_ViewPort
 LONG    v_LOFCprList
 LONG    v_SHFCprList
 WORD    v_DyOffset
 WORD    v_DxOffset
 WORD    v_Modes
 LABEL   v_SIZEOF
 STRUCTURE  collTable,0
 LONG    cp_collPtrs,16
 LABEL   cp_SIZEOF
 STRUCTURE  RasInfo,0
 APTR    ri_Next
 LONG    ri_BitMap
 WORD    ri_RxOffset
 WORD    ri_RyOffset
 LABEL   ri_SIZEOF
 ENDC

; >>> BEGIN graphics/rastport.i

 IFND    GRAPHICS_RASTPORT_I
GRAPHICS_RASTPORT_I SET 1
 IFND    GRAPHICS_GFX_I
 ENDC
 STRUCTURE  TmpRas,0
 APTR     tr_RasPtr
 LONG     tr_Size
 LABEL    tr_SIZEOF
 STRUCTURE   GelsInfo,0
 BYTE     gi_sprRsrvd
 BYTE     gi_Flags
 APTR     gi_gelHead
 APTR     gi_gelTail
 APTR     gi_nextLine
 APTR     gi_lastColor
 APTR     gi_collHandler
 SHORT    gi_leftmost
 SHORT    gi_rightmost
 SHORT    gi_topmost
 SHORT    gi_bottommost
 APTR     gi_firstBlissObj
 APTR     gi_lastBlissObj
 LABEL    gi_SIZEOF
 BITDEF   RP,FRST_DOT,0
 BITDEF   RP,ONE_DOT,1
 BITDEF   RP,DBUFFER,2
 BITDEF   RP,AREAOUTLINE,3
 BITDEF   RP,NOCROSSFILL,5
RP_JAM1        EQU 0
RP_JAM2        EQU 1
RP_COMPLEMENT  EQU 2
RP_INVERSVID   EQU 4
 BITDEF  RP,TXSCALE,0
 STRUCTURE  RastPort,0
 LONG     rp_Layer
 LONG     rp_BitMap
 LONG     rp_AreaPtrn
 LONG     rp_TmpRas
 LONG     rp_AreaInfo
 LONG     rp_GelsInfo
 BYTE     rp_Mask
 BYTE     rp_FgPen
 BYTE     rp_BgPen
 BYTE     rp_AOLPen
 BYTE     rp_DrawMode
 BYTE     rp_AreaPtSz
 BYTE     rp_Dummy
 BYTE     rp_linpatcnt
 WORD     rp_Flags
 WORD     rp_LinePtrn
 WORD     rp_cp_x
 WORD     rp_cp_y
 STRUCT   rp_minterms,8
 WORD     rp_PenWidth
 WORD     rp_PenHeight
 LONG     rp_Font
 BYTE     rp_AlgoStyle
 BYTE     rp_TxFlags
 WORD     rp_TxHeight
 WORD     rp_TxWidth
 WORD     rp_TxBaseline
 WORD     rp_TxSpacing
 APTR     rp_RP_User
 STRUCT   rp_longreserved,8
 ifnd    GFX_RASTPORT_1_2
 STRUCT   rp_wordreserved,14
 STRUCT   rp_reserved,8
 endc
 LABEL    rp_SIZEOF
 STRUCTURE  AreaInfo,0
 LONG     ai_VctrTbl
 LONG     ai_VctrPtr
 LONG     ai_FlagTbl
 LONG     ai_FlagPtr
 WORD     ai_Count
 WORD     ai_MaxCount
 WORD     ai_FirstX
 WORD     ai_FirstY
 LABEL    ai_SIZEOF
ONE_DOTn    equ     1
ONE_DOT     equ     $2
FRST_DOTn   equ     0
FRST_DOT    equ     1
 ENDC

; >>> BEGIN graphics/layers.i

 IFND    GRAPHICS_LAYERS_I
GRAPHICS_LAYERS_I   SET 1
 IFND    EXEC_SEMAPHORES_I
 ENDC
 IFND  EXEC_LISTS_I
 ENDC
LAYERSIMPLE             equ   1
LAYERSMART              equ   2  
LAYERSUPER              equ   4
LAYERUPDATING           equ   $10
LAYERBACKDROP           equ   $40
LAYERREFRESH            equ   $80
LAYER_CLIPRECTS_LOST    equ   $100 
LMN_REGION  equ -1
 STRUCTURE  Layer_Info,0
 APTR       li_top_layer
 APTR       li_check_lp
 APTR       li_obs
 STRUCT     li_FreeClipRects,MLH_SIZE
 STRUCT     li_Lock,SS_SIZE
 STRUCT     li_gs_Head,LH_SIZE
 LONG            li_long_reserved
 WORD       li_Flags
 BYTE       li_fatten_count
 BYTE       li_LockLayersCount
 WORD       li_LayerInfo_extra_size
 APTR            li_blitbuff
 APTR       li_LayerInfo_extra
 LABEL      li_SIZEOF
NEWLAYERINFO_CALLED     equ 1
ALERTLAYERSNOMEM        equ $83010000
 ENDC

; >>> BEGIN graphics/text.i

 IFND  GRAPHICS_TEXT_I
GRAPHICS_TEXT_I      SET   1
 IFND     EXEC_PORTS_I
 ENDC
FS_NORMAL   EQU 0
 BITDEF   FS,EXTENDED,3
 BITDEF   FS,ITALIC,2
 BITDEF   FS,BOLD,1
 BITDEF   FS,UNDERLINED,0
 BITDEF   FP,ROMFONT,0
 BITDEF   FP,DISKFONT,1
 BITDEF   FP,REVPATH,2
 BITDEF   FP,TALLDOT,3
 BITDEF   FP,WIDEDOT,4
 BITDEF   FP,PROPORTIONAL,5
 BITDEF   FP,DESIGNED,6
 BITDEF   FP,REMOVED,7
 STRUCTURE  TextAttr,0
 APTR     ta_Name
 UWORD    ta_YSize
 UBYTE    ta_Style
 UBYTE    ta_Flags
 LABEL    ta_SIZEOF
 STRUCTURE  TextFont,MN_SIZE
 UWORD    tf_YSize
 UBYTE    tf_Style
 UBYTE    tf_Flags
 UWORD    tf_XSize
 UWORD    tf_Baseline
 UWORD    tf_BoldSmear
 UWORD    tf_Accessors
 UBYTE    tf_LoChar
 UBYTE    tf_HiChar
 APTR     tf_CharData
 UWORD    tf_Modulo
 APTR     tf_CharLoc
 APTR     tf_CharSpace
 APTR     tf_CharKern
 LABEL    tf_SIZEOF
 ENDC

; >>> BEGIN intuition/intuitionbase.i

 IFND  INTUITION_INTUITIONBASE_I
INTUITION_INTUITIONBASE_I SET  1
 IFND EXEC_TYPES_I
 ENDC
 IFND EXEC_LIBRARIES_I
 ENDC
 IFND    GRAPHICS_VIEW_I
 ENDC
 STRUCTURE IntuitionBase,0
 STRUCT  ib_LibNode,LIB_SIZE
 STRUCT  ib_ViewLord,v_SIZEOF
 APTR    ib_ActiveWindow
 APTR    ib_ActiveScreen
 APTR    ib_FirstScreen
 ENDC

; >>> BEGIN intuition/intuition.i

 IFND    INTUITION_INTUITION_I
INTUITION_INTUITION_I   SET     1
 IFND EXEC_TYPES_I
 ENDC
 IFND    GRAPHICS_GFX_I
 ENDC
 IFND    GRAPHICS_CLIP_I
 ENDC
 IFND    GRAPHICS_VIEW_I
 ENDC
 IFND    GRAPHICS_RASTPORT_I
 ENDC
 IFND    GRAPHICS_LAYERS_I
 ENDC
 IFND    GRAPHICS_TEXT_I
 ENDC
 IFND EXEC_PORTS_I
 ENDC
 IFND    DEVICES_TIMER_I
 ENDC
 IFND    DEVICES_INPUTEVENT_I
 ENDC
 STRUCTURE Menu,0
 APTR  mu_NextMenu
 WORD mu_LeftEdge
 WORD mu_TopEdge
 WORD mu_Width
 WORD mu_Height
 WORD mu_Flags
 APTR mu_MenuName
 APTR  mu_FirstItem
 WORD mu_JazzX
 WORD mu_JazzY
 WORD mu_BeatX
 WORD mu_BeatY
 LABEL mu_SIZEOF
MENUENABLED EQU $0001
MIDRAWN EQU $0100
 STRUCTURE MenuItem,0
 APTR mi_NextItem
 WORD mi_LeftEdge
 WORD mi_TopEdge
 WORD mi_Width
 WORD mi_Height
 WORD mi_Flags
 LONG mi_MutualExclude
 APTR mi_ItemFill
 APTR mi_SelectFill
 BYTE mi_Command
 BYTE mi_KludgeFill00
 APTR mi_SubItem
 WORD mi_NextSelect
 LABEL  mi_SIZEOF
CHECKIT         EQU $0001
ITEMTEXT        EQU $0002
COMMSEQ         EQU $0004
MENUTOGGLE      EQU $0008
ITEMENABLED     EQU $0010
HIGHFLAGS       EQU $00C0
HIGHIMAGE       EQU $0000
HIGHCOMP        EQU $0040
HIGHBOX         EQU $0080
HIGHNONE        EQU $00C0
CHECKED         EQU $0100
ISDRAWN         EQU $1000
HIGHITEM        EQU $2000
MENUTOGGLED     EQU $4000
 STRUCTURE Requester,0
 APTR  rq_OlderRequest
 WORD rq_LeftEdge
 WORD rq_TopEdge
 WORD rq_Width
 WORD rq_Height
 WORD rq_RelLeft
 WORD rq_RelTop
 APTR  rq_ReqGadget
 APTR  rq_ReqBorder
 APTR  rq_ReqText
 WORD  rq_Flags
 UBYTE rq_BackFill
 BYTE rq_KludgeFill00
 APTR rq_ReqLayer
 STRUCT rq_ReqPad1,32
 APTR  rq_ImageBMap
 APTR  rq_RWindow
 STRUCT rq_ReqPad2,36
 LABEL rq_SIZEOF
POINTREL        EQU $0001
PREDRAWN        EQU $0002
NOISYREQ        EQU $0004
REQOFFWINDOW    EQU $1000
REQACTIVE       EQU $2000
SYSREQUEST      EQU $4000
DEFERREFRESH    EQU $8000
 STRUCTURE Gadget,0
 APTR gg_NextGadget
 WORD gg_LeftEdge
 WORD gg_TopEdge
 WORD gg_Width
 WORD gg_Height
 WORD gg_Flags
 WORD gg_Activation
 WORD gg_GadgetType
 APTR gg_GadgetRender
 APTR gg_SelectRender
 APTR gg_GadgetText
 LONG gg_MutualExclude
 APTR gg_SpecialInfo
 WORD gg_GadgetID
 APTR  gg_UserData
 LABEL gg_SIZEOF
GADGHIGHBITS    EQU $0003
GADGHCOMP       EQU $0000
GADGHBOX        EQU $0001
GADGHIMAGE      EQU $0002
GADGHNONE       EQU $0003
GADGIMAGE       EQU $0004 
GRELBOTTOM      EQU $0008
GRELRIGHT       EQU $0010
GRELWIDTH       EQU $0020
GRELHEIGHT      EQU $0040
SELECTED        EQU $0080
GADGDISABLED    EQU $0100
RELVERIFY       EQU $0001
GADGIMMEDIATE   EQU $0002
ENDGADGET       EQU $0004
FOLLOWMOUSE     EQU $0008
RIGHTBORDER     EQU $0010
LEFTBORDER      EQU $0020
TOPBORDER       EQU $0040
BOTTOMBORDER    EQU $0080
TOGGLESELECT    EQU $0100
STRINGCENTER    EQU $0200
STRINGRIGHT     EQU $0400
LONGINT         EQU $0800
ALTKEYMAP       EQU $1000
BOOLEXTEND      EQU $2000
GADGETTYPE      EQU $FC00
SYSGADGET       EQU $8000
SCRGADGET       EQU $4000
GZZGADGET       EQU $2000
REQGADGET       EQU $1000
SIZING          EQU $0010
WDRAGGING       EQU $0020
SDRAGGING       EQU $0030
WUPFRONT        EQU $0040
SUPFRONT        EQU $0050
WDOWNBACK       EQU $0060
SDOWNBACK       EQU $0070
CLOSE           EQU $0080
BOOLGADGET      EQU $0001
GADGET0002      EQU $0002
PROPGADGET      EQU $0003
STRGADGET       EQU $0004
 STRUCTURE BoolInfo,0
 WORD    bi_Flags
 APTR    bi_Mask
 LONG    bi_Reserved
 LABEL   bi_SIZEOF
BOOLMASK        EQU     $0001
 STRUCTURE PropInfo,0
 WORD pi_Flags
 WORD pi_HorizPot
 WORD pi_VertPot
 WORD pi_HorizBody
 WORD pi_VertBody
 WORD pi_CWidth
 WORD pi_CHeight
 WORD pi_HPotRes
 WORD pi_VPotRes
 WORD pi_LeftBorder
 WORD pi_TopBorder
 LABEL  pi_SIZEOF
AUTOKNOB        EQU $0001
FREEHORIZ       EQU $0002
FREEVERT        EQU $0004
PROPBORDERLESS  EQU $0008
KNOBHIT         EQU $0100
KNOBHMIN        EQU 6
KNOBVMIN        EQU 4
MAXBODY         EQU $FFFF
MAXPOT          EQU $FFFF
 STRUCTURE StringInfo,0
 APTR  si_Buffer
 APTR  si_UndoBuffer
 WORD si_BufferPos
 WORD si_MaxChars
 WORD si_DispPos
 WORD si_UndoPos
 WORD si_NumChars
 WORD si_DispCount
 WORD si_CLeft
 WORD si_CTop
 APTR  si_LayerPtr
 LONG  si_LongInt
 APTR si_AltKeyMap
 LABEL si_SIZEOF
 STRUCTURE IntuiText,0
 BYTE it_FrontPen
 BYTE it_BackPen
 BYTE it_DrawMode
 BYTE it_KludgeFill00
 WORD it_LeftEdge
 WORD it_TopEdge
 APTR  it_ITextFont
 APTR it_IText
 APTR  it_NextText
 LABEL it_SIZEOF
 STRUCTURE Border,0
 WORD  bd_LeftEdge
 WORD  bd_TopEdge
 BYTE  bd_FrontPen
 BYTE  bd_BackPen
 BYTE  bd_DrawMode
 BYTE  bd_Count
 APTR  bd_XY
 APTR  bd_NextBorder
 LABEL bd_SIZEOF
 STRUCTURE Image,0
 WORD ig_LeftEdge
 WORD ig_TopEdge
 WORD ig_Width
 WORD ig_Height
 WORD ig_Depth
 APTR ig_ImageData
 BYTE ig_PlanePick
 BYTE ig_PlaneOnOff
 APTR ig_NextImage
 LABEL ig_SIZEOF
 STRUCTURE IntuiMessage,0
 STRUCT im_ExecMessage,MN_SIZE
 LONG im_Class
 WORD im_Code
 WORD im_Qualifier
 APTR im_IAddress
 WORD im_MouseX
 WORD im_MouseY
 LONG im_Seconds
 LONG im_Micros
 APTR im_IDCMPWindow
 APTR im_SpecialLink
 LABEL  im_SIZEOF
SIZEVERIFY      EQU     $00000001
NEWSIZE         EQU     $00000002
REFRESHWINDOW   EQU     $00000004
MOUSEBUTTONS    EQU     $00000008
MOUSEMOVE       EQU     $00000010
GADGETDOWN      EQU     $00000020
GADGETUP        EQU     $00000040
REQSET          EQU     $00000080
MENUPICK        EQU     $00000100
CLOSEWINDOW     EQU     $00000200
RAWKEY          EQU     $00000400
REQVERIFY       EQU     $00000800
REQCLEAR        EQU     $00001000
MENUVERIFY      EQU     $00002000
NEWPREFS        EQU     $00004000
DISKINSERTED    EQU     $00008000
DISKREMOVED     EQU     $00010000
WBENCHMESSAGE   EQU     $00020000
ACTIVEWINDOW    EQU     $00040000
INACTIVEWINDOW  EQU     $00080000
DELTAMOVE       EQU     $00100000
VANILLAKEY      EQU     $00200000
INTUITICKS      EQU     $00400000
LONELYMESSAGE   EQU     $80000000
MENUHOT         EQU     $0001
MENUCANCEL      EQU     $0002
MENUWAITING     EQU     $0003
OKOK            EQU     MENUHOT
OKABORT         EQU     $0004
OKCANCEL        EQU     MENUCANCEL
WBENCHOPEN      EQU $0001
WBENCHCLOSE     EQU $0002
 STRUCTURE Window,0
 APTR wd_NextWindow
 WORD wd_LeftEdge
 WORD wd_TopEdge
 WORD wd_Width
 WORD wd_Height
 WORD wd_MouseY
 WORD wd_MouseX
 WORD wd_MinWidth
 WORD wd_MinHeight
 WORD wd_MaxWidth
 WORD wd_MaxHeight
 LONG wd_Flags
 APTR wd_MenuStrip
 APTR wd_Title
 APTR wd_FirstRequest
 APTR wd_DMRequest
 WORD wd_ReqCount
 APTR wd_WScreen
 APTR wd_RPort
 BYTE wd_BorderLeft
 BYTE wd_BorderTop
 BYTE wd_BorderRight
 BYTE wd_BorderBottom
 APTR wd_BorderRPort
 APTR wd_FirstGadget
 APTR wd_Parent
 APTR wd_Descendant
 APTR wd_Pointer
 BYTE wd_PtrHeight
 BYTE wd_PtrWidth
 BYTE wd_XOffset
 BYTE wd_YOffset
 ULONG wd_IDCMPFlags
 APTR wd_UserPort
 APTR wd_WindowPort
 APTR wd_MessageKey
 BYTE wd_DetailPen
 BYTE wd_BlockPen
 APTR wd_CheckMark
 APTR wd_ScreenTitle
 WORD wd_GZZMouseX
 WORD wd_GZZMouseY
 WORD wd_GZZWidth
 WORD wd_GZZHeight
 APTR wd_ExtData
 APTR wd_UserData
 APTR wd_WLayer
 APTR IFont
 LABEL wd_Size
WINDOWSIZING    EQU $0001
WINDOWDRAG      EQU $0002
WINDOWDEPTH     EQU $0004
WINDOWCLOSE     EQU $0008
SIZEBRIGHT      EQU $0010
SIZEBBOTTOM     EQU $0020
REFRESHBITS     EQU $00C0
SMART_REFRESH   EQU $0000
SIMPLE_REFRESH  EQU $0040
SUPER_BITMAP    EQU $0080
OTHER_REFRESH   EQU $00C0
BACKDROP        EQU $0100
REPORTMOUSE     EQU $0200
GIMMEZEROZERO   EQU $0400
BORDERLESS      EQU $0800
ACTIVATE        EQU $1000
WINDOWACTIVE    EQU $2000
INREQUEST       EQU $4000
MENUSTATE       EQU $8000
RMBTRAP         EQU $00010000
NOCAREREFRESH   EQU $00020000
WINDOWREFRESH   EQU $01000000
WBENCHWINDOW    EQU $02000000
WINDOWTICKED    EQU $04000000
SUPER_UNUSED    EQU $FCFC0000
 STRUCTURE NewWindow,0
 WORD nw_LeftEdge
 WORD nw_TopEdge
 WORD nw_Width
 WORD nw_Height
 BYTE nw_DetailPen
 BYTE nw_BlockPen
 LONG nw_IDCMPFlags
 LONG nw_Flags
 APTR        nw_FirstGadget
 APTR nw_CheckMark
 APTR nw_Title
 APTR nw_Screen
 APTR nw_BitMap
 WORD nw_MinWidth
 WORD nw_MinHeight
 WORD nw_MaxWidth
 WORD nw_MaxHeight
 WORD nw_Type
 LABEL nw_SIZE
 STRUCTURE Screen,0
 APTR sc_NextScreen
 APTR sc_FirstWindow
 WORD sc_LeftEdge
 WORD sc_TopEdge
 WORD sc_Width
 WORD sc_Height
 WORD sc_MouseY
 WORD sc_MouseX
 WORD sc_Flags
 APTR sc_Title
 APTR sc_DefaultTitle
 BYTE sc_BarHeight
 BYTE sc_BarVBorder
 BYTE sc_BarHBorder
 BYTE sc_MenuVBorder
 BYTE sc_MenuHBorder
 BYTE sc_WBorTop
 BYTE sc_WBorLeft
 BYTE sc_WBorRight
 BYTE sc_WBorBottom
 BYTE sc_KludgeFill00
 APTR sc_Font
 STRUCT sc_ViewPort,vp_SIZEOF
 STRUCT sc_RastPort,rp_SIZEOF
 STRUCT sc_BitMap,bm_SIZEOF
 STRUCT sc_LayerInfo,li_SIZEOF
 APTR sc_FirstGadget
 BYTE sc_DetailPen
 BYTE sc_BlockPen
 WORD sc_SaveColor0
 APTR sc_BarLayer
 APTR sc_ExtData
 APTR sc_UserData
 LABEL sc_SIZEOF
SCREENTYPE      EQU     $000F
WBENCHSCREEN    EQU     $0001
CUSTOMSCREEN    EQU     $000F
SHOWTITLE       EQU     $0010
BEEPING         EQU     $0020
CUSTOMBITMAP    EQU     $0040
SCREENBEHIND    EQU     $0080
SCREENQUIET     EQU     $0100
STDSCREENHEIGHT EQU     -1
 STRUCTURE NewScreen,0
 WORD ns_LeftEdge
 WORD ns_TopEdge
 WORD ns_Width
 WORD ns_Height
 WORD ns_Depth
 BYTE ns_DetailPen
 BYTE ns_BlockPen
 WORD ns_ViewModes
 WORD ns_Type
 APTR ns_Font
 APTR ns_DefaultTitle
 APTR ns_Gadgets
 APTR ns_CustomBitMap
 LABEL    ns_SIZEOF
FILENAME_SIZE EQU       30
POINTERSIZE     EQU     (1+16+1)*2
TOPAZ_EIGHTY    EQU     8       
TOPAZ_SIXTY     EQU     9
 STRUCTURE Preferences,0
 BYTE pf_FontHeight
 BYTE pf_PrinterPort
 WORD pf_BaudRate
 STRUCT pf_KeyRptSpeed,TV_SIZE
 STRUCT pf_KeyRptDelay,TV_SIZE
 STRUCT pf_DoubleClick,TV_SIZE
 STRUCT pf_PointerMatrix,POINTERSIZE*2
 BYTE pf_XOffset
 BYTE pf_YOffset
 WORD pf_color17
 WORD pf_color18
 WORD pf_color19
 WORD pf_PointerTicks
 WORD pf_color0
 WORD pf_color1
 WORD pf_color2
 WORD pf_color3
 BYTE pf_ViewXOffset
 BYTE pf_ViewYOffset
 WORD pf_ViewInitX
 WORD pf_ViewInitY
 BOOL EnableCLI
 WORD pf_PrinterType
 STRUCT pf_PrinterFilename,FILENAME_SIZE
 WORD pf_PrintPitch
 WORD pf_PrintQuality
 WORD pf_PrintSpacing
 WORD pf_PrintLeftMargin
 WORD pf_PrintRightMargin
 WORD pf_PrintImage
 WORD pf_PrintAspect
 WORD pf_PrintShade
 WORD pf_PrintThreshold
 WORD pf_PaperSize
 WORD pf_PaperLength
 WORD pf_PaperType
 BYTE pf_SerRWBits
 BYTE pf_SerStopBuf
 BYTE pf_SerParShk
 BYTE pf_LaceWB
 STRUCT pf_WorkName,FILENAME_SIZE
 BYTE pf_RowSizeChange
 BYTE pf_ColumnSizeChange
 STRUCT pf_padding,14
 LABEL pf_SIZEOF
LACEWB          EQU     $01
PARALLEL_PRINTER EQU    $00
SERIAL_PRINTER  EQU     $01
BAUD_110        EQU     $00
BAUD_300        EQU     $01
BAUD_1200       EQU     $02
BAUD_2400       EQU     $03
BAUD_4800       EQU     $04
BAUD_9600       EQU     $05
BAUD_19200      EQU     $06
BAUD_MIDI       EQU     $07
FANFOLD         EQU     $00
SINGLE          EQU     $80
PICA            EQU     $000
ELITE           EQU     $400
FINE            EQU     $800
DRAFT           EQU     $000
LETTER          EQU     $100
SIX_LPI         EQU     $000
EIGHT_LPI       EQU     $200
IMAGE_POSITIVE  EQU     $00
IMAGE_NEGATIVE  EQU     $01
ASPECT_HORIZ    EQU     $00
ASPECT_VERT     EQU     $01
SHADE_BW        EQU     $00
SHADE_GREYSCALE EQU     $01
SHADE_COLOR     EQU     $02
US_LETTER       EQU     $00
US_LEGAL        EQU     $10
N_TRACTOR       EQU     $20
W_TRACTOR       EQU     $30
CUSTOM          EQU     $40
CUSTOM_NAME     EQU     $00
ALPHA_P_101     EQU     $01
BROTHER_15XL    EQU     $02
CBM_MPS1000     EQU     $03
DIAB_630        EQU     $04
DIAB_ADV_D25    EQU     $05
DIAB_C_150      EQU     $06
EPSON           EQU     $07
EPSON_JX_80     EQU     $08
OKIMATE_20      EQU     $09
QUME_LP_20      EQU     $0A
HP_LASERJET     EQU     $0B
HP_LASERJET_PLUS EQU    $0C
SBUF_512        EQU     $00
SBUF_1024       EQU     $01
SBUF_2048       EQU     $02
SBUF_4096       EQU     $03
SBUF_8000       EQU     $04
SBUF_16000      EQU     $05
SREAD_BITS      EQU     $F0
SWRITE_BITS     EQU     $0F
SSTOP_BITS      EQU     $F0
SBUFSIZE_BITS   EQU     $0F
SPARITY_BITS    EQU     $F0
SHSHAKE_BITS    EQU     $0F
SPARITY_NONE    EQU     $00
SPARITY_EVEN    EQU     $01
SPARITY_ODD     EQU     $02
SHSHAKE_XON     EQU     $00
SHSHAKE_RTS     EQU     $01
SHSHAKE_NONE    EQU     $02
 STRUCTURE Remember,0
 APTR rm_NextRemember
 LONG rm_RememberSize
 APTR rm_Memory
 LABEL    rm_SIZEOF
NOMENU EQU      $001F
NOITEM EQU      $003F
NOSUB  EQU      $001F
MENUNULL EQU    $FFFF
CHECKWIDTH      EQU     19
COMMWIDTH       EQU     27
LOWCHECKWIDTH   EQU     13
LOWCOMMWIDTH    EQU     16
ALERT_TYPE      EQU     $80000000
RECOVERY_ALERT  EQU     $00000000
DEADEND_ALERT   EQU     $80000000
AUTOFRONTPEN    EQU     0
AUTOBACKPEN     EQU     1
AUTODRAWMODE    EQU     RP_JAM2
AUTOLEFTEDGE    EQU     6
AUTOTOPEDGE     EQU     3
AUTOITEXTFONT   EQU     0
AUTONEXTTEXT    EQU     0
SELECTUP        EQU     (IECODE_LBUTTON+IECODE_UP_PREFIX)
SELECTDOWN      EQU     (IECODE_LBUTTON)
MENUUP          EQU     (IECODE_RBUTTON+IECODE_UP_PREFIX)
MENUDOWN        EQU     (IECODE_RBUTTON)
ALTLEFT         EQU     (IEQUALIFIER_LALT)
ALTRIGHT        EQU     (IEQUALIFIER_RALT)
AMIGALEFT       EQU     (IEQUALIFIER_LCOMMAND)
AMIGARIGHT      EQU     (IEQUALIFIER_RCOMMAND)
AMIGAKEYS       EQU     (AMIGALEFT+AMIGARIGHT)
CURSORUP        EQU     $4C
CURSORLEFT      EQU     $4F
CURSORRIGHT     EQU     $4E
CURSORDOWN      EQU     $4D
KEYCODE_Q       EQU     $10
KEYCODE_X       EQU     $32
KEYCODE_N       EQU     $36
KEYCODE_M       EQU     $37
KEYCODE_V       EQU     $34
KEYCODE_B       EQU     $35
 IFND    INTUITION_INTUITIONBASE_I
 ENDC
 ENDC

; >>> BEGIN devices/prtbase.i

 IFND  DEVICES_PRTBASE_I
DEVICES_PRTBASE_I EQU   1
 IFND  EXEC_NODES_I
 ENDC
 IFND  EXEC_LISTS_I
 ENDC
 IFND  EXEC_PORTS_I
 ENDC
 IFND  EXEC_LIBRARIES_I
 ENDC
 IFND  EXEC_TASKS_I
 ENDC
 IFND  DEVICES_PARALLEL_I
 ENDC
 IFND  DEVICES_SERIAL_I
 ENDC
 IFND  DEVICES_TIMER_I
 ENDC
 IFND  LIBRARIES_DOSEXTENS_I
 ENDC
 IFND  INTUITION_INTUITION_I
 ENDC
 STRUCTURE  DeviceData,LIB_SIZE
 APTR dd_Segment
 APTR dd_ExecBase
 APTR dd_CmdVectors
 APTR dd_CmdBytes
 UWORD   dd_NumCommands
 LABEL   dd_SIZEOF
du_Flags EQU   LN_PRI
 BITDEF  IO,QUEUED,4
 BITDEF  IO,CURRENT,5
 BITDEF  IO,SERVICING,6
 BITDEF  IO,DONE,7
 BITDEF  DU,STOPPED,0
P_PRIORITY  EQU         0
P_STKSIZE   EQU         $800
 BITDEF   P,IOR0,0
 BITDEF   P,IOR1,1
 BITDEF   P,EXPUNGED,7
 STRUCTURE  PrinterData,dd_SIZEOF
 STRUCT  pd_Unit,MP_SIZE
 BPTR pd_PrinterSegment
 UWORD   pd_PrinterType
 APTR pd_SegmentData
 APTR pd_PrintBuf
 APTR pd_PWrite
 APTR pd_PBothReady
 IFGT IOEXTPar_SIZE-IOEXTSER_SIZE
 STRUCT  pd_IOR0,IOEXTPar_SIZE
 STRUCT  pd_IOR1,IOEXTPar_SIZE
 ENDC
 IFLE IOEXTPar_SIZE-IOEXTSER_SIZE
 STRUCT  pd_IOR0,IOEXTSER_SIZE
 STRUCT  pd_IOR1,IOEXTSER_SIZE
 ENDC
 STRUCT  pd_TIOR,IOTV_SIZE
 STRUCT  pd_IORPort,MP_SIZE
 STRUCT  pd_TC,TC_SIZE
 STRUCT  pd_Stk,P_STKSIZE
 UBYTE   pd_Flags
 UBYTE   pd_pad
 STRUCT  pd_Preferences,pf_SIZEOF
 UBYTE      pd_PWaitEnabled
 LABEL   pd_SIZEOF
 BITDEF  PPC,GFX,0
 BITDEF  PPC,COLOR,1
PPC_BWALPHA    EQU   0
PPC_BWGFX      EQU   1
PPC_COLORGFX   EQU   3
PCC_BW          EQU     1
PCC_YMC         EQU     2
PCC_YMC_BW      EQU     3
PCC_YMCB        EQU     4
PCC_4COLOR      EQU     $4
PCC_ADDITIVE    EQU     $8
PCC_WB          EQU     $9
PCC_BGR         EQU     $a
PCC_BGR_WB      EQU     $b
PCC_BGRW        EQU     $c
 STRUCTURE  PrinterExtendedData,0
 APTR    ped_PrinterName
 APTR    ped_Init
 APTR    ped_Expunge
 APTR    ped_Open
 APTR    ped_Close
 UBYTE   ped_PrinterClass
 UBYTE   ped_ColorClass
 UBYTE   ped_MaxColumns
 UBYTE   ped_NumCharSets
 UWORD   ped_NumRows
 ULONG   ped_MaxXDots
 ULONG   ped_MaxYDots
 UWORD   ped_XDotsInch
 UWORD   ped_YDotsInch
 APTR    ped_Commands
 APTR    ped_DoSpecial
 APTR    ped_Render
 LONG    ped_TimeoutSecs
 APTR    ped_8BitChars
 LABEL   ped_SIZEOF
 STRUCTURE  PrinterSegment,0
 ULONG   ps_NextSegment
 ULONG   ps_runAlert
 UWORD   ps_Version
 UWORD   ps_Revision
 LABEL   ps_PED
 ENDC

; >>> BEGIN exec/devices.i

 IFND EXEC_DEVICES_I
EXEC_DEVICES_I SET 1
 IFND EXEC_LIBRARIES_I
 ENDC !EXEC_LIBRARIES_I
 IFND EXEC_PORTS_I
 ENDC !EXEC_PORTS_I
 STRUCTURE  DD,LIB_SIZE
 LABEL   DD_SIZE
 STRUCTURE  UNIT,MP_SIZE
 UBYTE   UNIT_FLAGS
 UBYTE   UNIT_pad
 UWORD   UNIT_OPENCNT
 LABEL   UNIT_SIZE
 BITDEF  UNIT,ACTIVE,0
 BITDEF  UNIT,INTASK,1
 ENDC !EXEC_DEVICES_I

; >>> BEGIN devices/trackdisk.i

 IFND    DEVICES_TRACKDISK_I
DEVICES_TRACKDISK_I     SET     1
 IFND    EXEC_IO_I
 ENDC    !EXEC_IO_I
 IFND    EXEC_DEVICES_I
 ENDC    !EXEC_DEVICES_I
NUMSECS         EQU     11
NUMUNITS        EQU     4
TD_SECTOR       EQU     512
TD_SECSHIFT     EQU     9
TD_NAME:        MACRO
 DC.B    'trackdisk.device',0
 DS.W    0
 ENDM
 BITDEF  TD,EXTCOM,15
 DEVINIT
 DEVCMD  TD_MOTOR
 DEVCMD  TD_SEEK
 DEVCMD  TD_FORMAT
 DEVCMD  TD_REMOVE
 DEVCMD  TD_CHANGENUM
 DEVCMD  TD_CHANGESTATE
 DEVCMD  TD_PROTSTATUS
 DEVCMD  TD_RAWREAD
 DEVCMD  TD_RAWWRITE
 DEVCMD  TD_GETDRIVETYPE
 DEVCMD  TD_GETNUMTRACKS
 DEVCMD  TD_ADDCHANGEINT
 DEVCMD  TD_REMCHANGEINT
 DEVCMD  TD_LASTCOMM
ETD_WRITE       EQU     (CMD_WRITE!TDF_EXTCOM)
ETD_READ        EQU     (CMD_READ!TDF_EXTCOM)
ETD_MOTOR       EQU     (TD_MOTOR!TDF_EXTCOM)
ETD_SEEK        EQU     (TD_SEEK!TDF_EXTCOM)
ETD_FORMAT      EQU     (TD_FORMAT!TDF_EXTCOM)
ETD_UPDATE      EQU     (CMD_UPDATE!TDF_EXTCOM)
ETD_CLEAR       EQU     (CMD_CLEAR!TDF_EXTCOM)
ETD_RAWREAD     EQU     (TD_RAWREAD!TDF_EXTCOM)
ETD_RAWWRITE    EQU     (TD_RAWWRITE!TDF_EXTCOM)
 STRUCTURE IOEXTTD,IOSTD_SIZE
 ULONG   IOTD_COUNT
 ULONG   IOTD_SECLABEL
 LABEL   IOTD_SIZE
 BITDEF  IOTD,INDEXSYNC,4
TD_LABELSIZE    EQU     16
 BITDEF  TD,ALLOW_NON_3_5,0
DRIVE3_5        EQU     1
DRIVE5_25       EQU     2
TDERR_NotSpecified      EQU     20
TDERR_NoSecHdr          EQU     21
TDERR_BadSecPreamble    EQU     22
TDERR_BadSecID          EQU     23
TDERR_BadHdrSum         EQU     24
TDERR_BadSecSum         EQU     25
TDERR_TooFewSecs        EQU     26
TDERR_BadSecHdr         EQU     27
TDERR_WriteProt         EQU     28
TDERR_DiskChanged       EQU     29
TDERR_SeekError         EQU     30
TDERR_NoMem             EQU     31
TDERR_BadUnitNum        EQU     32
TDERR_BadDriveType      EQU     33
TDERR_DriveInUse        EQU     34
TDERR_PostReset         EQU     35
 STRUCTURE TDU_PUBLICUNIT,UNIT_SIZE
 UWORD   TDU_COMP01TRACK
 UWORD   TDU_COMP10TRACK
 UWORD   TDU_COMP11TRACK
 ULONG   TDU_STEPDELAY
 ULONG   TDU_SETTLEDELAY
 UBYTE   TDU_RETRYCNT
 LABEL   TDU_PUBLICUNITSIZE
 ENDC    DEVICE_TRACKDISK_I

; >>> BEGIN exec/interrupts.i

 IFND EXEC_INTERRUPTS_I
EXEC_INTERRUPTS_I SET 1
 IFND EXEC_NODES_I
 ENDC !EXEC_NODES_I
 IFND EXEC_LISTS_I
 ENDC !EXEC_LISTS_I
 STRUCTURE  IS,LN_SIZE
 APTR    IS_DATA
 APTR    IS_CODE
 LABEL   IS_SIZE
 STRUCTURE  IV,0
 APTR    IV_DATA
 APTR    IV_CODE
 APTR    IV_NODE
 LABEL   IV_SIZE
 BITDEF  S,SAR,15
 BITDEF  S,TQE,14
 BITDEF  S,SINT,13
 STRUCTURE  SH,LH_SIZE
 UWORD   SH_PAD
 LABEL   SH_SIZE
SIH_PRIMASK  EQU        $0F0
SIH_QUEUES   EQU        5
 BITDEF  INT,NMI,15
 ENDC !EXEC_INTERRUPTS_I

; >>> BEGIN exec/execbase.i

 IFND EXEC_EXECBASE_I
EXEC_EXECBASE_I SET 1
 IFND EXEC_TYPES_I
 ENDC !EXEC_TYPES_I
 IFND EXEC_LISTS_I
 ENDC !EXEC_LISTS_I
 IFND EXEC_INTERRUPTS_I
 ENDC !EXEC_INTERRUPTS_I
 IFND EXEC_LIBRARIES_I
 ENDC !EXEC_LIBRARIES_I
 STRUCTURE  ExecBase,LIB_SIZE
 UWORD       SoftVer
 WORD        LowMemChkSum
 ULONG       ChkBase
 APTR        ColdCapture
 APTR        CoolCapture
 APTR        WarmCapture
 APTR        SysStkUpper
 APTR        SysStkLower
 ULONG       MaxLocMem
 APTR        DebugEntry
 APTR        DebugData
 APTR        AlertData
 APTR        MaxExtMem
 WORD        ChkSum
 LABEL       IntVects  
 STRUCT      IVTBE,IV_SIZE
 STRUCT      IVDSKBLK,IV_SIZE
 STRUCT      IVSOFTINT,IV_SIZE
 STRUCT      IVPORTS,IV_SIZE
 STRUCT      IVCOPER,IV_SIZE
 STRUCT      IVVERTB,IV_SIZE
 STRUCT      IVBLIT,IV_SIZE
 STRUCT      IVAUD0,IV_SIZE
 STRUCT      IVAUD1,IV_SIZE
 STRUCT      IVAUD2,IV_SIZE
 STRUCT      IVAUD3,IV_SIZE
 STRUCT      IVRBF,IV_SIZE
 STRUCT      IVDSKSYNC,IV_SIZE
 STRUCT      IVEXTER,IV_SIZE
 STRUCT      IVINTEN,IV_SIZE
 STRUCT      IVNMI,IV_SIZE
 APTR        ThisTask
 ULONG       IdleCount
 ULONG       DispCount
 UWORD       Quantum
 UWORD       Elapsed
 UWORD       SysFlags
 BYTE        IDNestCnt
 BYTE        TDNestCnt
 UWORD       AttnFlags
 UWORD       AttnResched
 APTR        ResModules
 APTR        TaskTrapCode
 APTR        TaskExceptCode
 APTR        TaskExitCode
 ULONG       TaskSigAlloc
 UWORD       TaskTrapAlloc
 STRUCT      MemList,LH_SIZE
 STRUCT      ResourceList,LH_SIZE
 STRUCT      DeviceList,LH_SIZE
 STRUCT      IntrList,LH_SIZE
 STRUCT      LibList,LH_SIZE
 STRUCT      PortList,LH_SIZE
 STRUCT      TaskReady,LH_SIZE
 STRUCT      TaskWait,LH_SIZE
 STRUCT      SoftInts,SH_SIZE*5
 STRUCT      LastAlert,4*4
 UBYTE       VBlankFrequency
 UBYTE       PowerSupplyFrequency
 STRUCT      SemaphoreList,LH_SIZE
 APTR        KickMemPtr
 APTR        KickTagPtr
 APTR        KickCheckSum
 STRUCT      ExecBaseReserved,10
 STRUCT      ExecBaseNewReserved,20
 LABEL       SYSBASESIZE
 BITDEF  AF,68010,0
 BITDEF  AF,68020,1
 BITDEF  AF,68881,4
 BITDEF  AF,RESERVED8,8
 BITDEF  AF,RESERVED9,9
 ENDC !EXEC_EXECBASE_I

; >>> BEGIN exec/ables.i

 IFND EXEC_ABLES_I
EXEC_ABLES_I  SET 1
 IFND EXEC_TYPES_I
 ENDC !EXEC_TYPES_I
 IFND EXEC_EXECBASE_I
 ENDC !EXEC_EXECBASE_I
INT_ABLES   MACRO
 XREF    _intena
 ENDM
DISABLE     MACRO
 IFC     '\1',''
 MOVE.W  #$04000,_intena
 ADDQ.B  #1,IDNestCnt(A6)
 ENDC
 IFNC    '\1',''
 MOVE.L  4,\1
 MOVE.W  #$04000,_intena
 ADDQ.B  #1,IDNestCnt(\1)
 ENDC
 ENDM
ENABLE      MACRO
 IFC     '\1',''
 SUBQ.B  #1,IDNestCnt(A6)
 BGE.S   ENABLE\@
 MOVE.W  #$0C000,_intena
ENABLE\@:
 ENDC
 IFNC    '\1',''
 MOVE.L  4,\1
 SUBQ.B  #1,IDNestCnt(\1)
 BGE.S   ENABLE\@
 MOVE.W  #$0C000,_intena
ENABLE\@:
 ENDC
 ENDM
TASK_ABLES  MACRO
 XREF    _LVOPermit
 ENDM
FORBID      MACRO
 IFC     '\1',''
 ADDQ.B  #1,TDNestCnt(A6)
 ENDC
 IFNC    '\1',''
 MOVE.L  4,\1
 ADDQ.B  #1,TDNestCnt(\1)
 ENDC
 ENDM
PERMIT      MACRO
 IFC     '\1',''
 JSR     _LVOPermit(A6)
 ENDC
 IFNC    '\1',''
 MOVE.L  A6,-(SP)
 MOVE.L  4,A6
 JSR     _LVOPermit(A6)
 MOVE.L  (SP)+,A6
 ENDC
 ENDM
 ENDC !EXEC_ABLES_I

; >>> BEGIN exec/alerts.i

 IFND EXEC_ALERTS_I
EXEC_ALERTS_I SET 1
 IFND EXEC_TYPES_I
 ENDC !EXEC_TYPES_I
 BITDEF  S,ALERTWACK,1
ALERT           macro   (alertNumber, paramArray, scratch)
 movem.l d7/a5/a6,-(sp)
 move.l  #\1,d7
 IFNC    '\2',''
 lea     \2,a5
 ENDC
 move.l  4,a6
 jsr     _LVOAlert(a6)
 movem.l (sp)+,d7/a5/a6
 endm
AT_DeadEnd      equ $80000000
AT_Recovery     equ $00000000
AG_NoMemory     equ $00010000
AG_MakeLib      equ $00020000
AG_OpenLib      equ $00030000
AG_OpenDev      equ $00040000
AG_OpenRes      equ $00050000
AG_IOError      equ $00060000
AG_NoSignal     equ $00070000
AO_ExecLib      equ $00008001
AO_GraphicsLib  equ $00008002
AO_LayersLib    equ $00008003
AO_Intuition    equ $00008004
AO_MathLib      equ $00008005
AO_CListLib     equ $00008006
AO_DOSLib       equ $00008007
AO_RAMLib       equ $00008008
AO_IconLib      equ $00008009
AO_ExpansionLib equ $0000800A
AO_AudioDev     equ $00008010
AO_ConsoleDev   equ $00008011
AO_GamePortDev  equ $00008012
AO_KeyboardDev  equ $00008013
AO_TrackDiskDev equ $00008014
AO_TimerDev     equ $00008015
AO_CIARsrc      equ $00008020
AO_DiskRsrc     equ $00008021
AO_MiscRsrc     equ $00008022
AO_BootStrap    equ $00008030
AO_Workbench    equ $00008031
AN_ExecLib      equ $01000000
AN_ExcptVect    equ $81000001
AN_BaseChkSum   equ $81000002
AN_LibChkSum    equ $81000003
AN_LibMem       equ $81000004
AN_MemCorrupt   equ $81000005
AN_IntrMem      equ $81000006
AN_InitAPtr     equ $81000007
AN_SemCorrupt   equ $81000008
AN_FreeTwice    equ $81000009
AN_BogusExcpt   equ $8100000A
AN_GraphicsLib  equ $02000000
AN_GfxNoMem     equ $82010000
AN_LongFrame    equ $82010006
AN_ShortFrame   equ $82010007
AN_TextTmpRas   equ $02010009
AN_BltBitMap    equ $8201000A
AN_RegionMemory equ $8201000B
AN_MakeVPort    equ $82010030
AN_GfxNoLCM     equ $82011234
AN_LayersLib    equ $03000000
AN_LayersNoMem  equ $83010000
AN_Intuition    equ $04000000
AN_GadgetType   equ $84000001
AN_BadGadget    equ $04000001
AN_CreatePort   equ $84010002
AN_ItemAlloc    equ $04010003
AN_SubAlloc     equ $04010004
AN_PlaneAlloc   equ $84010005
AN_ItemBoxTop   equ $84000006
AN_OpenScreen   equ $84010007
AN_OpenScrnRast equ $84010008
AN_SysScrnType  equ $84000009
AN_AddSWGadget  equ $8401000A
AN_OpenWindow   equ $8401000B
AN_BadState     equ $8400000C
AN_BadMessage   equ $8400000D
AN_WeirdEcho    equ $8400000E
AN_NoConsole    equ $8400000F
AN_MathLib      equ $05000000
AN_CListLib     equ $06000000
AN_DOSLib       equ $07000000
AN_StartMem     equ $07010001
AN_EndTask      equ $07000002
AN_QPktFail     equ $07000003
AN_AsyncPkt     equ $07000004
AN_FreeVec      equ $07000005
AN_DiskBlkSeq   equ $07000006
AN_BitMap       equ $07000007
AN_KeyFree      equ $07000008
AN_BadChkSum    equ $07000009
AN_DiskError    equ $0700000A
AN_KeyRange     equ $0700000B
AN_BadOverlay   equ $0700000C
AN_RAMLib       equ $08000000
AN_BadSegList   equ $08000001
AN_IconLib      equ $09000000
AN_ExpansionLib equ $0A000000
AN_BadExpansionFree     equ $0A000001
AN_AudioDev     equ $10000000
AN_ConsoleDev   equ $11000000
AN_GamePortDev  equ $12000000
AN_KeyboardDev  equ $13000000
AN_TrackDiskDev equ $14000000
AN_TDCalibSeek  equ $14000001
AN_TDDelay      equ $14000002
AN_TimerDev     equ $15000000
AN_TMBadReq     equ $15000001
AN_TMBadSupply  equ $15000002
AN_CIARsrc      equ $20000000
AN_DiskRsrc     equ $21000000
AN_DRHasDisk    equ $21000001   : get unit: already has disk
AN_DRIntNoAct   equ $21000002
AN_MiscRsrc     equ $22000000
AN_BootStrap    equ $30000000
AN_BootError    equ $30000001
AN_Workbench    equ $31000000
AN_DiskCopy     equ $32000000
 ENDC !EXEC_ALERTS_I

; >>> BEGIN exec/errors.i

 IFND EXEC_ERRORS_I
EXEC_ERRORS_I SET 1
IOERR_OPENFAIL  EQU     -1
IOERR_ABORTED   EQU     -2
IOERR_NOCMD     EQU     -3
IOERR_BADLENGTH EQU     -4
ERR_OPENDEVICE  EQU  IOERR_OPENFAIL
 ENDC !EXEC_ERRORS_I

; >>> BEGIN exec/memory.i

 IFND EXEC_MEMORY_I
EXEC_MEMORY_I SET 1
 IFND EXEC_NODES_I
 ENDC !EXEC_NODES_I
 STRUCTURE ML,LN_SIZE
 UWORD   ML_NUMENTRIES
 LABEL   ML_ME
 LABEL   ML_SIZE
 STRUCTURE ME,0
 LABEL   ME_REQS
 APTR    ME_ADDR
 ULONG   ME_LENGTH
 LABEL   ME_SIZE
 BITDEF  MEM,PUBLIC,0
 BITDEF  MEM,CHIP,1
 BITDEF  MEM,FAST,2
 BITDEF  MEM,CLEAR,16
 BITDEF  MEM,LARGEST,17
MEM_BLOCKSIZE   EQU 8
MEM_BLOCKMASK   EQU (MEM_BLOCKSIZE-1)
 STRUCTURE  MH,LN_SIZE
 UWORD   MH_ATTRIBUTES
 APTR    MH_FIRST
 APTR    MH_LOWER
 APTR    MH_UPPER
 ULONG   MH_FREE
 LABEL   MH_SIZE
 STRUCTURE  MC,0
 APTR    MC_NEXT
 ULONG   MC_BYTES
 APTR    MC_SIZE
 ENDC !EXEC_MEMORY_I

; >>> BEGIN exec/exec.i


; >>> BEGIN exec/funcdef.i

 IFND EXEC_FUNCDEF_I
EXEC_FUNCDEF_I	SET	1
 IFND EXEC_LIBRARIES_I
 ENDC !EXEC_LIBRARIES_I
 MACRO   FUNCDEF
_LVO\1      EQU      FUNC_CNT
FUNC_CNT    SET      FUNC_CNT-LIB_VECTSIZE
 ENDM
FUNC_CNT    SET      LIB_USERDEF
 ENDC

; >>> BEGIN exec/exec_lib.i

 IFND EXEC_TYPES_I
 ENDC !EXEC_TYPES_I
 IFND EXEC_FUNCDEF_I
 ENDC !EXEC_FUNCDEF_I
 FUNCDEF Supervisor
 FUNCDEF ExitIntr
 FUNCDEF Schedule
 FUNCDEF Reschedule
 FUNCDEF Switch
 FUNCDEF Dispatch
 FUNCDEF Exception
 FUNCDEF InitCode
 FUNCDEF InitStruct
 FUNCDEF MakeLibrary
 FUNCDEF MakeFunctions
 FUNCDEF FindResident
 FUNCDEF InitResident
 FUNCDEF Alert
 FUNCDEF Debug
 FUNCDEF Disable
 FUNCDEF Enable
 FUNCDEF Forbid
 FUNCDEF Permit
 FUNCDEF SetSR
 FUNCDEF SuperState
 FUNCDEF UserState
 FUNCDEF SetIntVector
 FUNCDEF AddIntServer
 FUNCDEF RemIntServer
 FUNCDEF Cause
 FUNCDEF Allocate
 FUNCDEF Deallocate
 FUNCDEF AllocMem
 FUNCDEF AllocAbs
 FUNCDEF FreeMem
 FUNCDEF AvailMem
 FUNCDEF AllocEntry
 FUNCDEF FreeEntry
 FUNCDEF Insert
 FUNCDEF AddHead
 FUNCDEF AddTail
 FUNCDEF Remove
 FUNCDEF RemHead
 FUNCDEF RemTail
 FUNCDEF Enqueue
 FUNCDEF FindName
 FUNCDEF AddTask
 FUNCDEF RemTask
 FUNCDEF FindTask
 FUNCDEF SetTaskPri
 FUNCDEF SetSignal
 FUNCDEF SetExcept
 FUNCDEF Wait
 FUNCDEF Signal
 FUNCDEF AllocSignal
 FUNCDEF FreeSignal
 FUNCDEF AllocTrap
 FUNCDEF FreeTrap
 FUNCDEF AddPort
 FUNCDEF RemPort
 FUNCDEF PutMsg
 FUNCDEF GetMsg
 FUNCDEF ReplyMsg
 FUNCDEF WaitPort
 FUNCDEF FindPort
 FUNCDEF AddLibrary
 FUNCDEF RemLibrary
 FUNCDEF OldOpenLibrary
 FUNCDEF CloseLibrary
 FUNCDEF SetFunction
 FUNCDEF SumLibrary
 FUNCDEF AddDevice
 FUNCDEF RemDevice
 FUNCDEF OpenDevice
 FUNCDEF CloseDevice
 FUNCDEF DoIO
 FUNCDEF SendIO
 FUNCDEF CheckIO
 FUNCDEF WaitIO
 FUNCDEF AbortIO
 FUNCDEF AddResource
 FUNCDEF RemResource
 FUNCDEF OpenResource
 FUNCDEF RawIOInit
 FUNCDEF RawMayGetChar
 FUNCDEF RawPutChar
 FUNCDEF RawDoFmt
 FUNCDEF GetCC
 FUNCDEF TypeOfMem
 FUNCDEF Procure
 FUNCDEF Vacate
 FUNCDEF OpenLibrary
 FUNCDEF InitSemaphore
 FUNCDEF ObtainSemaphore
 FUNCDEF ReleaseSemaphore
 FUNCDEF AttemptSemaphore
 FUNCDEF ObtainSemaphoreList
 FUNCDEF ReleaseSemaphoreList
 FUNCDEF FindSemaphore
 FUNCDEF AddSemaphore
 FUNCDEF RemSemaphore
 FUNCDEF SumKickData
 FUNCDEF AddMemList
 FUNCDEF CopyMem
 FUNCDEF CopyMemQuick

; >>> BEGIN exec/execname.i

 IFND EXEC_EXECNAME_I
EXEC_EXECNAME_I SET 1
EXECNAME        macro
 dc.b    'exec.library',0
 ds.w    0
 endm
 ENDC !EXEC_EXECNAME_I

; >>> BEGIN exec/initializers.i

 IFND EXEC_INITIALIZERS_I
EXEC_INITIALIZERS_I SET 1
INITBYTE        MACRO
 DC.B    $e0
 DC.B    0
 DC.W    \1
 DC.B    \2
 DC.B    0
 ENDM
INITWORD        MACRO
 DC.B    $d0
 DC.B    0
 DC.W    \1
 DC.W    \2
 ENDM
INITLONG        MACRO
 DC.B    $c0
 DC.B    0
 DC.W    \1
 DC.L    \2
 ENDM
INITSTRUCT  MACRO
 DS.W    0
 IFC     '\4',''
COUNT\@     SET     0
 ENDC
 IFNC    '\4',''
COUNT\@     SET     \4
 ENDC
CMD\@       SET     (((\1)<<4)!COUNT\@)
 IFLE    (\2)-255
 DC.B    (CMD\@)!$80
 DC.B    \2
 MEXIT
 ENDC
 DC.B    CMD\@!$0C0
 DC.B    (((\2)>>16)&$0FF)
 DC.W    ((\2)&$0FFFF)
 ENDM
 ENDC !EXEC_INITIALIZERS_I

; >>> BEGIN exec/resident.i

 IFND EXEC_RESIDENT_I
EXEC_RESIDENT_I SET 1
 IFND EXEC_TYPES_I
 ENDC !EXEC_TYPES_I
 STRUCTURE RT,0
 UWORD RT_MATCHWORD
 APTR  RT_MATCHTAG
 APTR  RT_ENDSKIP
 UBYTE RT_FLAGS
 UBYTE RT_VERSION
 UBYTE RT_TYPE
 BYTE  RT_PRI
 APTR  RT_NAME
 APTR  RT_IDSTRING
 APTR  RT_INIT
 LABEL RT_SIZE
RTC_MATCHWORD   EQU     $4AFC
 BITDEF RT,COLDSTART,0
 BITDEF RT,AUTOINIT,7
RTM_WHEN        EQU     1
RTW_NEVER       EQU     0
RTW_COLDSTART   EQU     1
 ENDC !EXEC_RESIDENT_I

; >>> BEGIN graphics/display.i

 IFND  GRAPHICS_DISPLAY_I
GRAPHICS_DISPLAY_I   SET   1
MODE_640    equ   $8000
PLNCNTMSK   equ   $7
PLNCNTSHFT  equ   12
PF2PRI      equ   $40
COLORON     equ   $0200
DBLPF       equ   $400
HOLDNMODIFY equ   $800
INTERLACE   equ   4
PFA_FINE_SCROLL       equ   $F
PFB_FINE_SCROLL_SHIFT equ   4
PF_FINE_SCROLL_MASK   equ   $F
DIW_HORIZ_POS         equ   $7F
DIW_VRTCL_POS         equ   $1FF
DIW_VRTCL_POS_SHIFT   equ   7
DFTCH_MASK            equ   $FF
VPOSRLOF              equ   $8000
 ENDC

; >>> BEGIN graphics/gels.i

 IFND    GRAPHICS_GELS_I
GRAPHICS_GELS_I SET 1
 IFND EXEC_TYPES_I
 ENDC !EXEC_TYPES_I
SUSERFLAGS  EQU $00FF
 BITDEF  VS,VSPRITE,0
 BITDEF  VS,SAVEBACK,1
 BITDEF  VS,OVERLAY,2
 BITDEF  VS,MUSTDRAW,3
 BITDEF  VS,BACKSAVED,8
 BITDEF  VS,BOBUPDATE,9
 BITDEF  VS,GELGONE,10
 BITDEF  VS,VSOVERFLOW,11
BUSERFLAGS  EQU $00FF
 BITDEF  B,SAVEBOB,0
 BITDEF  B,BOBISCOMP,1
 BITDEF  B,BWAITING,8
 BITDEF  B,BDRAWN,9
 BITDEF  B,BOBSAWAY,10
 BITDEF  B,BOBNIX,11
 BITDEF  B,SAVEPRESERVE,12
 BITDEF  B,OUTSTEP,13
ANFRACSIZE  EQU 6
ANIMHALF    EQU $0020
RINGTRIGGER EQU $0001
InitAnimate MACRO
 CLR.L   \1
 ENDM
RemBob      MACRO
 OR.W    #BF_BOBSAWAY,b_BobFlags+\1
 ENDM
 STRUCTURE  VS,0
 APTR    vs_NextVSprite
 APTR    vs_PrevVSprite
 APTR    vs_DrawPath
 APTR    vs_ClearPath
 WORD    vs_Oldy
 WORD    vs_Oldx
 WORD    vs_VSFlags
 WORD    vs_Y
 WORD    vs_X
 WORD    vs_Height
 WORD    vs_Width
 WORD    vs_Depth
 WORD    vs_MeMask
 WORD    vs_HitMask
 APTR    vs_ImageData
 APTR    vs_BorderLine
 APTR    vs_CollMask
 APTR    vs_SprColors
 APTR    vs_VSBob
 BYTE    vs_PlanePick
 BYTE    vs_PlaneOnOff
 LABEL   vs_SUserExt
 LABEL   vs_SIZEOF
 STRUCTURE  BOB,0
 WORD    bob_BobFlags
 APTR    bob_SaveBuffer
 APTR    bob_ImageShadow
 APTR    bob_Before
 APTR    bob_After
 APTR    bob_BobVSprite
 APTR    bob_BobComp
 APTR    bob_DBuffer
 LABEL   bob_BUserExt
 LABEL   bob_SIZEOF
 STRUCTURE  AC,0
 WORD    ac_CompFlags
 WORD    ac_Timer
 WORD    ac_TimeSet
 APTR    ac_NextComp
 APTR    ac_PrevComp
 APTR    ac_NextSeq
 APTR    ac_PrevSeq
 APTR    ac_AnimCRoutine
 WORD    ac_YTrans
 WORD    ac_XTrans
 APTR    ac_HeadOb
 APTR    ac_AnimBob
 LABEL   ac_SIZE
 STRUCTURE  AO,0
 APTR    ao_NextOb
 APTR    ao_PrevOb
 LONG    ao_Clock
 WORD    ao_AnOldY
 WORD    ao_AnOldX
 WORD    ao_AnY
 WORD    ao_AnX
 WORD    ao_YVel
 WORD    ao_XVel
 WORD    ao_XAccel
 WORD    ao_YAccel
 WORD    ao_RingYTrans
 WORD    ao_RingXTrans
 APTR    ao_AnimORoutine
 APTR    ao_HeadComp
 LABEL   ao_AUserExt
 LABEL   ao_SIZEOF
 STRUCTURE  DBP,0
 WORD    dbp_BufY
 WORD    dbp_BufX
 APTR    dbp_BufPath
 APTR    dbp_BufBuffer
 APTR    dbp_BufPlanes
 LABEL   dbp_SIZEOF
 ENDC

; >>> BEGIN graphics/gfxbase.i

 IFND    GRAPHICS_GFXBASE_I
GRAPHICS_GFXBASE_I  SET 1
 IFND    EXEC_LISTS_I
 ENDC
 IFND    EXEC_LIBRARIES_I
 ENDC
 IFND    EXEC_INTERRUPTS_I
 ENDC
 STRUCTURE  GfxBase,LIB_SIZE
 APTR    gb_ActiView
 APTR    gb_copinit
 APTR    gb_cia
 APTR    gb_blitter
 APTR    gb_LOFlist
 APTR    gb_SHFlist
 APTR    gb_blthd
 APTR    gb_blttl
 APTR    gb_bsblthd
 APTR    gb_bsblttl
 STRUCT  gb_vbsrv,IS_SIZE
 STRUCT  gb_timsrv,IS_SIZE
 STRUCT  gb_bltsrv,IS_SIZE
 STRUCT  gb_TextFonts,LH_SIZE
 APTR    gb_DefaultFont
 UWORD   gb_Modes
 BYTE    gb_VBlank
 BYTE    gb_Debug
 UWORD   gb_BeamSync
 WORD    gb_system_bplcon0
 BYTE    gb_SpriteReserved
 BYTE    gb_bytereserved
 WORD    gb_Flags
 WORD    gb_BlitLock
 WORD    gb_BlitNest
 STRUCT  gb_BlitWaitQ,LH_SIZE
 APTR    gb_BlitOwner
 STRUCT  gb_TOF_WaitQ,LH_SIZE
 WORD    gb_DisplayFlags
 APTR    gb_SimpleSprites
 WORD    gb_MaxDisplayRow
 WORD    gb_MaxDisplayColumn
 WORD    gb_NormalDisplayRows
 WORD    gb_NormalDisplayColumns
 WORD    gb_NormalDPMX
 WORD    gb_NormalDPMY
 APTR    gb_LastChanceMemory
 APTR    gb_LCMptr
 WORD    gb_MicrosPerLine
 STRUCT  gb_reserved,8
 LABEL   gb_SIZE
OWNBLITTERn equ 0
QBOWNERn    equ 1
QBOWNER     equ 1<<QBOWNERn
 ENDC

; >>> BEGIN graphics/regions.i

 IFND    GRAPHICS_REGIONS_I
GRAPHICS_REGIONS_I  SET 1
 IFND  GRAPHICS_GFX_I
 ENDC
 STRUCTURE   Region,0
 STRUCT   rg_bounds,ra_SIZEOF
 APTR  rg_RegionRectangle
 LABEL    rg_SIZEOF
 STRUCTURE   RegionRectangle,0
 APTR  rr_Next
 APTR  rr_Prev
 STRUCT   rr_bounds,ra_SIZEOF
 LABEL    rr_SIZEOF
 ENDC

; >>> BEGIN graphics/sprite.i

 IFND    GRAPHICS_SPRITE_I
GRAPHICS_SPRITE_I  SET 1
 IFND EXEC_TYPES_I
 ENDC !EXEC_TYPES_I
 STRUCTURE   SimpleSprite,0
 APTR        ss_posctldata
 WORD        ss_height
 WORD        ss_x
 WORD        ss_y
 WORD        ss_num
 LABEL       ss_SIZEOF
 ENDC

; >>> BEGIN hardware/adkbits.i

 IFND  HARDWARE_ADKBITS_I
HARDWARE_ADKBITS_I SET  1
ADKB_SETCLR    EQU   15
ADKB_PRECOMP1  EQU   14
ADKB_PRECOMP0  EQU   13
ADKB_MFMPREC   EQU   12
ADKB_UARTBRK   EQU   11
ADKB_WORDSYNC  EQU   10
ADKB_MSBSYNC   EQU   9
ADKB_FAST      EQU   8
ADKB_USE3PN    EQU   7
ADKB_USE2P3    EQU   6
ADKB_USE1P2    EQU   5
ADKB_USE0P1    EQU   4
ADKB_USE3VN    EQU   3
ADKB_USE2V3    EQU   2
ADKB_USE1V2    EQU   1
ADKB_USE0V1    EQU   0
ADKF_SETCLR    EQU   (1<<15)
ADKF_PRECOMP1  EQU   (1<<14)
ADKF_PRECOMP0  EQU   (1<<13)
ADKF_MFMPREC   EQU   (1<<12)
ADKF_UARTBRK   EQU   (1<<11)
ADKF_WORDSYNC  EQU   (1<<10)
ADKF_MSBSYNC   EQU   (1<<9)
ADKF_FAST      EQU   (1<<8)
ADKF_USE3PN    EQU   (1<<7)
ADKF_USE2P3    EQU   (1<<6)
ADKF_USE1P2    EQU   (1<<5)
ADKF_USE0P1    EQU   (1<<4)
ADKF_USE3VN    EQU   (1<<3)
ADKF_USE2V3    EQU   (1<<2)
ADKF_USE1V2    EQU   (1<<1)
ADKF_USE0V1    EQU   (1<<0)
ADKF_PRE000NS  EQU   0
ADKF_PRE140NS  EQU   (ADKF_PRECOMP0)
ADKF_PRE280NS  EQU   (ADKF_PRECOMP1)
ADKF_PRE560NS  EQU   (ADKF_PRECOMP0!ADKF_PRECOMP1)
 ENDC  !HARDWARE_ADKBITS_I

; >>> BEGIN hardware/blit.i

 IFND  HARDWARE_BLIT_I
HARDWARE_BLIT_I   SET   1
 IFND EXEC_TYPES_I
 ENDC !EXEC_TYPES_I
 STRUCTURE bltnode,0
 LONG  bn_n
 LONG  bn_function
 BYTE  bn_stat
 BYTE  bn_dummy
 WORD  bn_blitsize
 WORD  bn_beamsync
 LONG  bn_cleanup
 LABEL bn_SIZEOF
CLEANMEn    equ 6
CLEANME     equ 1<<CLEANMEn
HSIZEBITS   equ   6
VSIZEBITS   equ   16-HSIZEBITS
HSIZEMASK   equ   $3f
VSIZEMASK   equ   $3FF
MAXBYTESPERROW EQU   128
ABC         equ   $80
ABNC        equ   $40
ANBC        equ   $20
ANBNC       equ   $10
NABC        equ   $8
NABNC       equ   $4
NANBC       equ   $2
NANBNC      equ   $1
BC0B_DEST   equ     8 
BC0B_SRCC   equ     9 
BC0B_SRCB   equ     10 
BC0B_SRCA   equ     11 
BC0F_DEST   equ   $100
BC0F_SRCC   equ   $200
BC0F_SRCB   equ   $400
BC0F_SRCA   equ   $800
BC1F_DESC   equ 2
DEST        equ   $100
SRCC        equ   $200
SRCB        equ   $400
SRCA        equ   $800
ASHIFTSHIFT equ   12
BSHIFTSHIFT equ   12
LINEMODE    equ   $1
FILL_OR     equ   $8
FILL_XOR    equ   $10
FILL_CARRYIN   equ   $4
ONEDOT      equ   $2
OVFLAG      equ   $20
SIGNFLAG    equ   $40
BLITREVERSE equ   $2
SUD         equ   $10
SUL         equ   $8
AUL         equ   $4
OCTANT8     equ   24
OCTANT7     equ   4
OCTANT6     equ   12
OCTANT5     equ   28
OCTANT4     equ   20
OCTANT3     equ   8
OCTANT2     equ   0
OCTANT1     equ   16
 ENDC  !HARDWARE_BLIT_I

; >>> BEGIN hardware/cia.i

 IFND  HARDWARE_CIA_I
HARDWARE_CIA_I SET   1
ciapra            EQU   $0000
ciaprb            EQU   $0100
ciaddra           EQU   $0200
ciaddrb           EQU   $0300
ciatalo           EQU   $0400
ciatahi           EQU   $0500
ciatblo           EQU   $0600
ciatbhi           EQU   $0700
ciatodlow         EQU   $0800
ciatodmid         EQU   $0900
ciatodhi          EQU   $0A00
ciasdr            EQU   $0C00
ciaicr            EQU   $0D00
ciacra            EQU   $0E00
ciacrb            EQU   $0F00
CIAICRB_TA        EQU   0
CIAICRB_TB        EQU   1
CIAICRB_ALRM      EQU   2
CIAICRB_SP        EQU   3
CIAICRB_FLG       EQU   4
CIAICRB_IR        EQU   7
CIAICRB_SETCLR    EQU   7
CIACRAB_START     EQU   0
CIACRAB_PBON      EQU   1
CIACRAB_OUTMODE   EQU   2
CIACRAB_RUNMODE   EQU   3
CIACRAB_LOAD      EQU   4
CIACRAB_INMODE    EQU   5
CIACRAB_SPMODE    EQU   6
CIACRAB_TODIN     EQU   7
CIACRBB_START     EQU   0
CIACRBB_PBON      EQU   1
CIACRBB_OUTMODE   EQU   2
CIACRBB_RUNMODE   EQU   3
CIACRBB_LOAD      EQU   4
CIACRBB_INMODE0   EQU   5
CIACRBB_INMODE1   EQU   6
CIACRBB_ALARM     EQU   7
CIAICRF_TA        EQU   (1<<0)
CIAICRF_TB        EQU   (1<<1)
CIAICRF_ALRM      EQU   (1<<2)
CIAICRF_SP        EQU   (1<<3)
CIAICRF_FLG       EQU   (1<<4)
CIAICRF_IR        EQU   (1<<7)
CIAICRF_SETCLR    EQU   (1<<7)
CIACRAF_START     EQU   (1<<0)
CIACRAF_PBON      EQU   (1<<1)
CIACRAF_OUTMODE   EQU   (1<<2)
CIACRAF_RUNMODE   EQU   (1<<3)
CIACRAF_LOAD      EQU   (1<<4)
CIACRAF_INMODE    EQU   (1<<5)
CIACRAF_SPMODE    EQU   (1<<6)
CIACRAF_TODIN     EQU   (1<<7)
CIACRBF_START     EQU   (1<<0)
CIACRBF_PBON      EQU   (1<<1)
CIACRBF_OUTMODE   EQU   (1<<2)
CIACRBF_RUNMODE   EQU   (1<<3)
CIACRBF_LOAD      EQU   (1<<4)
CIACRBF_INMODE0   EQU   (1<<5)
CIACRBF_INMODE1   EQU   (1<<6)
CIACRBF_ALARM     EQU   (1<<7)
CIACRBF_IN_PHI2   EQU   0
CIACRBF_IN_CNT    EQU   (CIACRBF_INMODE0)
CIACRBF_IN_TA     EQU   (CIACRBF_INMODE1)
CIACRBF_IN_CNT_TA EQU   (CIACRBF_INMODE0!CIACRBF_INMODE1)
CIAB_GAMEPORT1    EQU   (7)
CIAB_GAMEPORT0    EQU   (6)
CIAB_DSKRDY       EQU   (5)
CIAB_DSKTRACK0    EQU   (4)
CIAB_DSKPROT      EQU   (3)
CIAB_DSKCHANGE    EQU   (2)
CIAB_LED          EQU   (1)
CIAB_OVERLAY      EQU   (0)
CIAB_COMDTR       EQU   (7)
CIAB_COMRTS       EQU   (6)
CIAB_COMCD        EQU   (5)
CIAB_COMCTS       EQU   (4)
CIAB_COMDSR       EQU   (3)
CIAB_PRTRSEL      EQU   (2)
CIAB_PRTRPOUT     EQU   (1)
CIAB_PRTRBUSY     EQU   (0)
CIAB_DSKMOTOR     EQU   (7)
CIAB_DSKSEL3      EQU   (6)
CIAB_DSKSEL2      EQU   (5)
CIAB_DSKSEL1      EQU   (4)
CIAB_DSKSEL0      EQU   (3)
CIAB_DSKSIDE      EQU   (2)
CIAB_DSKDIREC     EQU   (1)
CIAB_DSKSTEP      EQU   (0)
CIAF_GAMEPORT1    EQU   (1<<7)
CIAF_GAMEPORT0    EQU   (1<<6)
CIAF_DSKRDY       EQU   (1<<5)
CIAF_DSKTRACK0    EQU   (1<<4)
CIAF_DSKPROT      EQU   (1<<3)
CIAF_DSKCHANGE    EQU   (1<<2)
CIAF_LED          EQU   (1<<1)
CIAF_OVERLAY      EQU   (1<<0)
CIAF_COMDTR       EQU   (1<<7)
CIAF_COMRTS       EQU   (1<<6)
CIAF_COMCD        EQU   (1<<5)
CIAF_COMCTS       EQU   (1<<4)
CIAF_COMDSR       EQU   (1<<3)
CIAF_PRTRSEL      EQU   (1<<2)
CIAF_PRTRPOUT     EQU   (1<<1)
CIAF_PRTRBUSY     EQU   (1<<0)
CIAF_DSKMOTOR     EQU   (1<<7)
CIAF_DSKSEL3      EQU   (1<<6)
CIAF_DSKSEL2      EQU   (1<<5)
CIAF_DSKSEL1      EQU   (1<<4)
CIAF_DSKSEL0      EQU   (1<<3)
CIAF_DSKSIDE      EQU   (1<<2)
CIAF_DSKDIREC     EQU   (1<<1)
CIAF_DSKSTEP      EQU   (1<<0)
 ENDC  !HARDWARE_CIA_I

; >>> BEGIN hardware/custom.i

 IFND  HARDWARE_CUSTOM_I
HARDWARE_CUSTOM_I SET   1
bltddat     EQU   $000
dmaconr     EQU   $002
vposr       EQU   $004
vhposr      EQU   $006
dskdatr     EQU   $008
joy0dat     EQU   $00A
joy1dat     EQU   $00C
clxdat      EQU   $00E
adkconr     EQU   $010
pot0dat     EQU   $012
pot1dat     EQU   $014
potinp      EQU   $016
serdatr     EQU   $018
dskbytr     EQU   $01A
intenar     EQU   $01C
intreqr     EQU   $01E
dskpt       EQU   $020
dsklen      EQU   $024
dskdat      EQU   $026
refptr      EQU   $028
vposw       EQU   $02A
vhposw      EQU   $02C
copcon      EQU   $02E
serdat      EQU   $030
serper      EQU   $032
potgo       EQU   $034
joytest     EQU   $036
strequ      EQU   $038
strvbl      EQU   $03A
strhor      EQU   $03C
strlong     EQU   $03E
bltcon0     EQU   $040
bltcon1     EQU   $042
bltafwm     EQU   $044
bltalwm     EQU   $046
bltcpt      EQU   $048
bltbpt      EQU   $04C
bltapt      EQU   $050
bltdpt      EQU   $054
bltsize     EQU   $058
bltcmod     EQU   $060
bltbmod     EQU   $062
bltamod     EQU   $064
bltdmod     EQU   $066
bltcdat     EQU   $070
bltbdat     EQU   $072
bltadat     EQU   $074
dsksync     EQU   $07E
cop1lc      EQU   $080
cop2lc      EQU   $084
copjmp1     EQU   $088
copjmp2     EQU   $08A
copins      EQU   $08C
diwstrt     EQU   $08E
diwstop     EQU   $090
ddfstrt     EQU   $092
ddfstop     EQU   $094
dmacon      EQU   $096
clxcon      EQU   $098
intena      EQU   $09A
intreq      EQU   $09C
adkcon      EQU   $09E
aud         EQU   $0A0
aud0        EQU   $0A0
aud1        EQU   $0B0
aud2        EQU   $0C0
aud3        EQU   $0D0
ac_ptr      EQU   $00
ac_len      EQU   $04
ac_per      EQU   $06
ac_vol      EQU   $08
ac_dat      EQU   $0A
ac_SIZEOF   EQU   $10
bplpt       EQU   $0E0
bplcon0     EQU   $100
bplcon1     EQU   $102
bplcon2     EQU   $104
bpl1mod     EQU   $108
bpl2mod     EQU   $10A
bpldat      EQU   $110
sprpt       EQU   $120
spr         EQU   $140
sd_pos      EQU   $00
sd_ctl      EQU   $02
sd_dataa    EQU   $04
sd_datab    EQU   $08
color       EQU   $180
 ENDC  !HARDWARE_CUSTOM_I

; >>> BEGIN hardware/dmabits.i

 IFND  HARDWARE_DMABITS_I
HARDWARE_DMABITS_I SET  1
DMAF_SETCLR    EQU   $8000
DMAF_AUDIO     EQU   $000F
DMAF_AUD0      EQU   $0001
DMAF_AUD1      EQU   $0002
DMAF_AUD2      EQU   $0004
DMAF_AUD3      EQU   $0008
DMAF_DISK      EQU   $0010
DMAF_SPRITE    EQU   $0020
DMAF_BLITTER   EQU   $0040
DMAF_COPPER    EQU   $0080
DMAF_RASTER    EQU   $0100
DMAF_MASTER    EQU   $0200
DMAF_BLITHOG   EQU   $0400
DMAF_ALL       EQU   $01FF
DMAF_BLTDONE   EQU   $4000
DMAF_BLTNZERO  EQU   $2000
DMAB_SETCLR    EQU   15
DMAB_AUD0      EQU   0
DMAB_AUD1      EQU   1
DMAB_AUD2      EQU   2
DMAB_AUD3      EQU   3
DMAB_DISK      EQU   4
DMAB_SPRITE    EQU   5
DMAB_BLITTER   EQU   6
DMAB_COPPER    EQU   7
DMAB_RASTER    EQU   8
DMAB_MASTER    EQU   9
DMAB_BLITHOG   EQU   10
DMAB_BLTDONE   EQU   14
DMAB_BLTNZERO  EQU   13
 ENDC  !HARDWARE_DMABITS_I

; >>> BEGIN hardware/intbits.i

 IFND  HARDWARE_INTBITS_I
HARDWARE_INTBITS_I SET  1
INTB_SETCLR    EQU   (15)
INTB_INTEN     EQU   (14)
INTB_EXTER     EQU   (13)
INTB_DSKSYNC   EQU   (12)
INTB_RBF       EQU   (11)
INTB_AUD3      EQU   (10)
INTB_AUD2      EQU   (9)
INTB_AUD1      EQU   (8)
INTB_AUD0      EQU   (7)
INTB_BLIT      EQU   (6)
INTB_VERTB     EQU   (5)
INTB_COPER     EQU   (4)
INTB_PORTS     EQU   (3)
INTB_SOFTINT   EQU   (2)
INTB_DSKBLK    EQU   (1)
INTB_TBE       EQU   (0)
INTF_SETCLR    EQU   (1<<15)
INTF_INTEN     EQU   (1<<14)
INTF_EXTER     EQU   (1<<13)
INTF_DSKSYNC   EQU   (1<<12)
INTF_RBF       EQU   (1<<11)
INTF_AUD3      EQU   (1<<10)
INTF_AUD2      EQU   (1<<9)
INTF_AUD1      EQU   (1<<8)
INTF_AUD0      EQU   (1<<7)
INTF_BLIT      EQU   (1<<6)
INTF_VERTB     EQU   (1<<5)
INTF_COPER     EQU   (1<<4)
INTF_PORTS     EQU   (1<<3)
INTF_SOFTINT   EQU   (1<<2)
INTF_DSKBLK    EQU   (1<<1)
INTF_TBE       EQU   (1<<0)
 ENDC  !HARDWARE_INTBITS_I

; >>> BEGIN libraries/configregs.i

 IFND    LIBRARIES_CONFIGREGS_I
LIBRARIES_CONFIGREGS_I  SET     1
 IFND EXEC_TYPES_I
 ENDC !EXEC_TYPES_I
 STRUCTURE ExpansionRom,0
 UBYTE       er_Type
 UBYTE       er_Product
 UBYTE       er_Flags
 UBYTE       er_Reserved03
 UWORD       er_Manufacturer
 ULONG       er_SerialNumber
 UWORD       er_InitDiagVec
 UBYTE       er_Reserved0c
 UBYTE       er_Reserved0d
 UBYTE       er_Reserved0e
 UBYTE       er_Reserved0f
 LABEL       ExpansionRom_SIZEOF
 STRUCTURE ExpansionControl,0
 UBYTE       ec_Interrupt
 UBYTE       ec_Reserved11
 UBYTE       ec_BaseAddress
 UBYTE       ec_Shutup
 UBYTE       ec_Reserved14
 UBYTE       ec_Reserved15
 UBYTE       ec_Reserved16
 UBYTE       ec_Reserved17
 UBYTE       ec_Reserved18
 UBYTE       ec_Reserved19
 UBYTE       ec_Reserved1a
 UBYTE       ec_Reserved1b
 UBYTE       ec_Reserved1c
 UBYTE       ec_Reserved1d
 UBYTE       ec_Reserved1e
 UBYTE       ec_Reserved1f
 LABEL       ExpansionControl_SIZEOF
E_SLOTSIZE              EQU     $10000
E_SLOTMASK              EQU     $ffff
E_SLOTSHIFT             EQU     16
E_EXPANSIONBASE         EQU     $e80000
E_EXPANSIONSIZE         EQU     $080000
E_EXPANSIONSLOTS        EQU     8
E_MEMORYBASE            EQU     $200000
E_MEMORYSIZE            EQU     $800000
E_MEMORYSLOTS           EQU     128
ERT_TYPEMASK            EQU     $c0
ERT_TYPEBIT             EQU     6
ERT_TYPESIZE            EQU     2
ERT_NEWBOARD            EQU     $c0
ERT_MEMMASK             EQU     $07
ERT_MEMBIT              EQU     0
ERT_MEMSIZE             EQU     3
 BITDEF  ERT,CHAINEDCONFIG,3
 BITDEF  ERT,DIAGVALID,4
 BITDEF  ERT,MEMLIST,5
 BITDEF  ERF,MEMSPACE,7
 BITDEF  ERF,NOSHUTUP,6
 BITDEF  ECI,INTENA,1
 BITDEF  ECI,RESET,3
 BITDEF  ECI,INT2PEND,4
 BITDEF  ECI,INT6PEND,5
 BITDEF  ECI,INT7PEND,6
 BITDEF  ECI,INTERRUPTING,7
 STRUCTURE DiagArea,0
 UBYTE       da_Config
 UBYTE       da_Flags
 UWORD       da_Size
 UWORD       da_DiagPoint
 UWORD       da_BootPoint
 UWORD       da_Name
 UWORD       da_Reserved01
 UWORD       da_Reserved02
 LABEL       DiagArea_SIZEOF
DAC_BUSWIDTH    EQU     $C0
DAC_NIBBLEWIDE  EQU     $00
DAC_BYTEWIDE    EQU     $40
DAC_WORDWIDE    EQU     $80
DAC_BOOTTIME    EQU     $30
DAC_NEVER       EQU     $00
DAC_CONFIGTIME  EQU     $10
DAC_BINDTIME    EQU     $20
 ENDC    !LIBRARIES_CONFIGREGS_I

; >>> BEGIN libraries/configvars.i

 IFND    LIBRARIES_CONFIGVARS_I
LIBRARIES_CONFIGVARS_I  SET     1
 IFND    EXEC_NODES_I
 ENDC    !EXEC_NODES_I
 IFND    LIBRARIES_CONFIGREGS_I
 ENDC    !LIBRARIES_CONFIGREGS_I
 STRUCTURE ConfigDev,0
 STRUCT      cd_Node,LN_SIZE
 UBYTE       cd_Flags
 UBYTE       cd_Pad
 STRUCT      cd_Rom,ExpansionRom_SIZEOF
 APTR        cd_BoardAddr
 APTR        cd_BoardSize
 UWORD       cd_SlotAddr
 UWORD       cd_SlotSize
 APTR        cd_Driver
 APTR        cd_NextCD
 STRUCT      cd_Unused,4*4
 LABEL       ConfigDev_SIZEOF
 BITDEF  CD,SHUTUP,0
 BITDEF  CD,CONFIGME,1
 STRUCTURE CurrentBinding,0
 APTR        cb_ConfigDev
 APTR        cb_FileName
 APTR        cb_ProductString
 APTR        cb_ToolTypes
 LABEL       CurrentBinding_SIZEOF
 ENDC    !LIBRARIES_CONFIGVARS_I

; >>> BEGIN libraries/diskfont.i

 IFND  LIBRARIES_DISKFONT_I
LIBRARIES_DISKFONT_I SET   1
 IFND     EXEC_NODES_I
 ENDC
 IFND     EXEC_LISTS_I
 ENDC
 IFND     GRAPHICS_TEXT_I
 ENDC
MAXFONTPATH EQU   256
 STRUCTURE  FC,0
 STRUCT   fc_FileName,MAXFONTPATH
 UWORD fc_YSize
 UBYTE fc_Style
 UBYTE fc_Flags
 LABEL fc_SIZEOF
FCH_ID      EQU   $0f00
 STRUCTURE  FCH,0
 UWORD fch_FileID
 UWORD fch_NumEntries
 LABEL fch_FC
DFH_ID      EQU   $0f80
MAXFONTNAME EQU   32
 STRUCTURE  DiskFontHeader,0
 STRUCT   dfh_DF,LN_SIZE
 UWORD dfh_FileID
 UWORD dfh_Revision
 LONG  dfh_Segment
 STRUCT   dfh_Name,MAXFONTNAME
 STRUCT   dfh_TF,tf_SIZEOF
 LABEL dfh_SIZEOF
 BITDEF   AF,MEMORY,0
 BITDEF   AF,DISK,1
 STRUCTURE  AF,0
 UWORD af_Type
 STRUCT   af_Attr,ta_SIZEOF
 LABEL af_SIZEOF
 STRUCTURE  AFH,0
 UWORD afh_NumEntries
 LABEL afh_AF
 ENDC

; >>> BEGIN libraries/dos_lib.i

reserve EQU     4
vsize   EQU     6
count   SET     -vsize*(reserve+1)
LIBENT  MACRO
_LVO\1  EQU     count
count   SET     count-vsize
 ENDM
 LIBENT   Open
 LIBENT   Close
 LIBENT   Read
 LIBENT   Write
 LIBENT   Input
 LIBENT   Output
 LIBENT   Seek
 LIBENT   DeleteFile
 LIBENT   Rename
 LIBENT   Lock
 LIBENT   UnLock
 LIBENT   DupLock
 LIBENT   Examine
 LIBENT   ExNext
 LIBENT   Info
 LIBENT   CreateDir
 LIBENT   CurrentDir
 LIBENT   IoErr
 LIBENT   CreateProc
 LIBENT   Exit
 LIBENT   LoadSeg
 LIBENT   UnLoadSeg
 LIBENT   GetPacket
 LIBENT   QueuePacket
 LIBENT   DeviceProc
 LIBENT   SetComment
 LIBENT   SetProtection
 LIBENT   DateStamp
 LIBENT   Delay
 LIBENT   WaitForChar
 LIBENT   ParentDir
 LIBENT   IsInteractive
 LIBENT   Execute

; >>> BEGIN libraries/expansion.i

 IFND    LIBRARIES_EXPANSION_I
LIBRARIES_EXPANSION_I   SET     1
 IFND EXEC_TYPES_I
 ENDC !EXEC_TYPES_I
EXPANSIONNAME   MACRO
 dc.b    'expansion.library',0
 ENDM
 BITDEF  ADN,STARTPROC,0
 ENDC    !LIBRARIES_EXPANSION_I

; >>> BEGIN libraries/filehandler.i

 IFND    LIBRARIES_FILEHANDLER_I
LIBRARIES_FILEHANDLER_I SET     1
 IFND      EXEC_TYPES_I
 ENDC     !EXEC_TYPES_I
 IFND      EXEC_PORTS_I
 ENDC     !EXEC_PORTS_I
 IFND      LIBRARIES_DOS_I
 ENDC     !LIBRARIES_DOS_I
DE_TABLESIZE    EQU     0
DE_SIZEBLOCK    EQU     1
DE_SECORG       EQU     2
DE_NUMHEADS     EQU     3
DE_SECSPERBLK   EQU     4
DE_BLKSPERTRACK EQU     5
DE_RESERVEDBLKS EQU     6
DE_PREFAC       EQU     7
DE_INTERLEAVE   EQU     8
DE_LOWCYL       EQU     9
DE_UPPERCYL     EQU     10
DE_NUMBUFFERS   EQU     11
DE_MEMBUFTYPE   EQU     12
 STRUCTURE FileSysStartupMsg,0
 ULONG       fssm_Unit
 BSTR        fssm_Device
 BPTR        fssm_Environ
 ULONG       fssm_Flags
 LABEL       FileSysStartupMsg_SIZEOF
 STRUCTURE DeviceNode,0
 BPTR        dn_Next
 ULONG       dn_Type
 CPTR        dn_Task
 BPTR        dn_Lock
 BSTR        dn_Handler
 ULONG       dn_StackSize
 LONG        dn_Priority
 BPTR        dn_Startup
 BPTR        dn_SegList
 BPTR        dn_GlobalVec
 BSTR        dn_Name
 LABEL       DeviceNode_SIZEOF
 ENDC    !LIBRARIES_FILEHANDLER_I

; >>> BEGIN libraries/translator.i

 TTL     '$Header: translator.i,v 32.1 86/01/22 01:18:17 sam Exp $'
 IFND    LIBRARIES_TRANSLATOR_I
LIBRARIES_TRANSLATOR_I  SET     1
TR_NotUsed      EQU     -1
TR_NoMem        EQU     -2
TR_MakeBad      EQU     -4
 ENDC

; >>> BEGIN resources/cia.i

CIAANAME        MACRO
 DC.B    'ciaa.resource',0
 ENDM
CIABNAME        MACRO
 DC.B    'ciab.resource',0
 ENDM

; >>> BEGIN resources/disk.i

 IFND    RESOURCES_DISK_I
RESOURCES_DISK_I        SET     1
 IFND    EXEC_TYPES_I
 ENDC    !EXEC_TYPES_I
 IFND    EXEC_LISTS_I
 ENDC    !EXEC_LISTS_I
 IFND    EXEC_PORTS_I
 ENDC    !EXEC_PORTS_I
 IFND    EXEC_INTERRUPTS_I
 ENDC    !EXEC_INTERRUPTS_I
 IFND    EXEC_LIBRARIES_I
 ENDC    !EXEC_LIBRARIES_I
 STRUCTURE DISCRESOURCEUNIT,MN_SIZE
 STRUCT  DRU_DISCBLOCK,IS_SIZE
 STRUCT  DRU_DISCSYNC,IS_SIZE
 STRUCT  DRU_INDEX,IS_SIZE
 LABEL   DRU_SIZE
 STRUCTURE DISCRESOURCE,LIB_SIZE
 APTR    DR_CURRENT
 UBYTE   DR_FLAGS
 UBYTE   DR_pad
 APTR    DR_SYSLIB
 APTR    DR_CIARESOURCE
 STRUCT  DR_UNITID,4*4
 STRUCT  DR_WAITING,LH_SIZE
 STRUCT  DR_DISCBLOCK,IS_SIZE
 STRUCT  DR_DISCSYNC,IS_SIZE
 STRUCT  DR_INDEX,IS_SIZE
 LABEL   DR_SIZE
 BITDEF  DR,ALLOC0,0
 BITDEF  DR,ALLOC1,1
 BITDEF  DR,ALLOC2,2
 BITDEF  DR,ALLOC3,3
 BITDEF  DR,ACTIVE,7
DSKDMAOFF       EQU     $4000
DISKNAME:       MACRO
 DC.B    'disk.resource',0
 DS.W    0
 ENDM
 LIBINIT LIB_BASE
 LIBDEF  DR_ALLOCUNIT
 LIBDEF  DR_FREEUNIT
 LIBDEF  DR_GETUNIT
 LIBDEF  DR_GIVEUNIT
 LIBDEF  DR_GETUNITID
DR_LASTCOMM     EQU     DR_GIVEUNIT
DRT_AMIGA       EQU     $00000000
DRT_37422D2S    EQU     $55555555
DRT_EMPTY       EQU     $FFFFFFFF
 ENDC

; >>> BEGIN resources/misc.i

 IFND    RESOURCES_MISC_I
RESOURCES_MISC_I        SET     1
 IFND    EXEC_TYPES_I
 ENDC    !EXEC_TYPES_I
 IFND    EXEC_LIBRARIES_I
 ENDC    !EXEC_LIBRARIES_I
MR_SERIALPORT   EQU     0
MR_SERIALBITS   EQU     1
MR_PARALLELPORT EQU     2
MR_PARALLELBITS EQU     3
NUMMRTYPES      EQU     4
 STRUCTURE MiscResource,LIB_SIZE
 STRUCT  mr_AllocArray,4*NUMMRTYPES
 LABEL   mr_Sizeof
 LIBINIT LIB_BASE
 LIBDEF  MR_ALLOCMISCRESOURCE
 LIBDEF  MR_FREEMISCRESOURCE
MISCNAME        MACRO
 DC.B    'misc.resource',0
 ENDM
 ENDC    !RESOURCE_MISC_I

; >>> BEGIN resources/potgo.i

 IFND     RESOURCES_POTGO_I
RESOURCES_POTGO_I EQU   1
POTGONAME   MACRO
 DC.B  'potgo.resource'
 DC.B  0
 DS.W  0
 ENDM
 ENDC

; >>> BEGIN workbench/icon.i

 IFND    WORKBENCH_ICON_I
WORKBENCH_ICON_I        SET     1
ICONNAME        MACRO
 DC.B    'icon.library',0
 ENDM
 ENDC    !WORKBENCH_ICON_I

; >>> BEGIN workbench/startup.i

 IFND    EXEC_TYPES_I
 ENDC    !EXEC_TYPES_I
 IFND    EXEC_PORTS_I
 ENDC    !EXEC_PORTS_I
 IFND    LIBRARIES_DOS_I
 ENDC    !LIBRARIES_DOS_I
 STRUCTURE WBStartup,0
 STRUCT      sm_Message,MN_SIZE
 APTR        sm_Process
 BPTR        sm_Segment
 LONG        sm_NumArgs
 APTR        sm_ToolWindow
 APTR        sm_ArgList
 LABEL       sm_SIZEOF
 STRUCTURE WBArg,0
 BPTR        wa_Lock
 APTR        wa_Name
 LABEL       wa_SIZEOF

; >>> BEGIN workbench/workbench.i

 IFND    EXEC_TYPES_I
 ENDC    !EXEC_TYPES_I
 IFND    EXEC_NODES_I
 ENDC    !EXEC_NODES_I
 IFND    EXEC_LISTS_I
 ENDC    !EXEC_LISTS_I
 IFND    EXEC_TASKS_I
 ENDC    !EXEC_TASKS_I
 IFND    INTUITION_INTUITION_I
 ENDC    !INTUITION_INTUITION_I
WBDISK          EQU     1
WBDRAWER        EQU     2
WBTOOL          EQU     3
WBPROJECT       EQU     4
WBGARBAGE       EQU     5
WBDEVICE        EQU     6
WBKICK          EQU     7
 STRUCTURE DrawerData,0
 STRUCT      dd_NewWindow,nw_SIZE
 LONG        dd_CurrentX
 LONG        dd_CurrentY
 LABEL       dd_SIZEOF_2
DRAWERDATAFILESIZE      EQU (dd_SIZEOF_2)
 STRUCTURE DiskObject,0
 UWORD       do_Magic
 UWORD       do_Version
 STRUCT      do_Gadget,gg_SIZEOF
 UWORD       do_Type
 APTR        do_DefaultTool
 APTR        do_ToolTypes
 LONG        do_CurrentX
 LONG        do_CurrentY
 APTR        do_DrawerData
 APTR        do_ToolWindow
 LONG        do_StackSize
 LABEL       do_SIZEOF
WB_DISKMAGIC    EQU     $e310
WB_DISKVERSION  EQU     1
 STRUCTURE FreeList,0
 WORD        fl_NumFree
 STRUCT      fl_MemList,LH_SIZE
 LABEL       FreeList_SIZEOF
MTYPE_PSTD              EQU     1
MTYPE_TOOLEXIT          EQU     2
MTYPE_DISKCHANGE        EQU     3
MTYPE_TIMER             EQU     4
MTYPE_CLOSEDOWN         EQU     5
MTYPE_IOPROC            EQU     6
GADGBACKFILL            EQU     $0001
NO_ICON_POSITION        EQU     ($80000000)

